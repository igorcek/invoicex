/** * Invoicex * Copyright (c) 2005,2006,2007 Marco Ceccarelli, Tnx snc * * Questo software Ã¨ soggetto, e deve essere distribuito con la licenza   * GNU General Public License, Version 2. La licenza accompagna il software * o potete trovarne una copia alla Free Software Foundation http://www.fsf.org . * * This software is subject to, and may be distributed under, the * GNU General Public License, Version 2. The license should have * accompanied the software or you may obtain a copy of the license * from the Free Software Foundation at http://www.fsf.org . *  * -- * Marco Ceccarelli (m.ceccarelli@tnx.it) * Tnx snc (http://www.tnx.it) * */package gestioneFatture;import it.tnx.Db;import gestioneFatture.frmArtiConListino.MyTable;import gestioneFatture.frmArtiConListino.articoliFigliModel;import gestioneFatture.frmArtiConListino.listinoModel;import it.tnx.accessoUtenti.Permesso;import it.tnx.commons.CastUtils;import it.tnx.commons.DbUtils;import it.tnx.commons.DebugUtils;import it.tnx.commons.FormatUtils;import it.tnx.commons.HttpUtils;import it.tnx.commons.ImgUtils;import it.tnx.commons.MicroBench;import it.tnx.commons.SwingUtils;import it.tnx.invoicex.InvoicexUtil;import it.tnx.invoicex.gui.JPanelCategorie;import java.awt.Component;import java.awt.Cursor;import java.awt.Dimension;import java.awt.event.ComponentAdapter;import java.awt.event.ComponentEvent;import java.awt.image.BufferedImage;import java.io.File;import java.math.BigDecimal;import java.sql.ResultSet;import java.sql.Types;import java.text.*;import java.util.Arrays;import java.util.Hashtable;import java.util.List;import java.util.Map;import java.util.Vector;import javax.imageio.ImageIO;import javax.swing.DefaultCellEditor;import javax.swing.ImageIcon;import javax.swing.JComboBox;import javax.swing.JComponent;import javax.swing.JDialog;import javax.swing.JFileChooser;import javax.swing.JInternalFrame;import javax.swing.JLabel;import javax.swing.JMenuItem;import javax.swing.JOptionPane;import javax.swing.JPopupMenu;import javax.swing.JTable;import javax.swing.JTextField;import javax.swing.SwingUtilities;import javax.swing.UIManager;import javax.swing.event.InternalFrameAdapter;import javax.swing.event.InternalFrameEvent;import javax.swing.filechooser.FileFilter;import javax.swing.table.DefaultTableCellRenderer;import javax.swing.table.DefaultTableModel;import org.apache.commons.httpclient.HttpClient;import org.apache.commons.httpclient.methods.PostMethod;import org.apache.commons.httpclient.methods.multipart.FilePart;import org.apache.commons.httpclient.methods.multipart.MultipartRequestEntity;import org.apache.commons.httpclient.methods.multipart.Part;import org.apache.commons.httpclient.methods.multipart.StringPart;import org.apache.commons.lang.ObjectUtils;import org.apache.commons.lang.StringUtils;import org.jdesktop.swingworker.SwingWorker;import org.jdesktop.swingx.JXHyperlink;import tnxbeans.*;public class frmArtiConListinoPerle        extends javax.swing.JInternalFrame {    private DefaultTableModel tabListinoModel;    private DefaultTableModel tabConfezioneModel;    private BufferedImage image = null;    /** Creates new form frmDati_blank */    public frmArtiConListinoPerle() {        initComponents();        labStatusImg.setVisible(false);        labStatusImgWeb.setVisible(false);        dati.aggiungiDbPanelCollegato(dati_web);        dati.nonSpostareSuTab0 = true;//        web_descrizione_lang.setLang(Arrays.asList("it", "en", "fr"));        List langs = Arrays.asList("it", "en", "fr");        dati.setLang(langs);        web_descrizione_lang.setLang(langs);        colore_web.setLang(langs);        dimensioni_web.setLang(langs);        mod_vendita_web.setLang(langs);        c1db.setVisible(false);        c2db.setVisible(false);        c3db.setVisible(false);        c4db.setVisible(false);        c5db.setVisible(false);        MicroBench mb = new MicroBench();        mb.start();        try {            texDescrizione.setFont(UIManager.getFont("TextField.font"));            texDescrizioneEn.setFont(UIManager.getFont("TextField.font"));        } catch (Exception e) {            e.printStackTrace();        }        this.texTipo.setVisible(false);        tabListino.setRowHeight(tabListino.getRowHeight() + 4);        jTabbedPane1.remove(1);        tabListinoModel = new javax.swing.table.DefaultTableModel(null, new String[]{                    "listino", "prezzo"                });        tabListino.setModel(tabListinoModel);        tabConfezioneModel = new javax.swing.table.DefaultTableModel(null, new String[]{                    "articolo", "quantita"                });        tabConfezione.setModel(tabConfezioneModel);        iva.dbOpenList(Db.getConn(), "select CAST(CONCAT(codice, ' - ', descrizione, ' (', percentuale, '%)') AS CHAR(100)) as descrizione, codice from codici_iva order by codice");        mb.out("frm arti 1");        //this.griglia.dbEditabile = true;        //associo il panel ai dati        this.dati.dbNomeTabella = "articoli";        Vector chiave = new Vector();        chiave.add("codice");        this.dati.dbChiave = chiave;        this.dati.butSave = this.butSave;        this.dati.butUndo = this.butUndo;        this.dati.butNew = this.butNew;        this.dati.butDele = this.butDele;        this.dati.butDuplica = this.butNew1;        this.dati.tipo_permesso = Permesso.PERMESSO_ANAGRAFICA_ARTICOLI;        this.dati.dbOpen(Db.getConn(), "select * from articoli order by codice limit 1");        this.dati.dbRefresh();        // Controllo permesso di scrittura articoli per escludere import da excel        if (!main.utente.getPermesso(Permesso.PERMESSO_ANAGRAFICA_ARTICOLI, Permesso.PERMESSO_TIPO_SCRITTURA)) this.butImportExcel.setEnabled(false);                mb.out("frm arti 2");        //apro la griglia        this.griglia.dbChiave = chiave;        String sql;        sql = "select ";        sql += " codice, ";        sql += " descrizione, ";        sql += " um , ";        if (main.getPersonalContain(main.PERSONAL_CHIANTICASHMERE)) {            sql += " descrizione_en, ";            sql += " um_en , ";        }        //sql += " prezzo1, ";        //sql += " prezzo2, ";        sql += " iva, ";        sql += " tipo ";        sql += " from articoli";        sql += " order by codice";        this.griglia.dbEditabile = false;        this.griglia.flagUsaThread = false;//        this.griglia.flagUsaOrdinamento = true;        java.util.Hashtable colsWidthPerc = new java.util.Hashtable();        colsWidthPerc.put("codice", new Double(10));        colsWidthPerc.put("descrizione", new Double(50));        colsWidthPerc.put("um", new Double(5));        colsWidthPerc.put("iva", new Double(10));        colsWidthPerc.put("tipo", new Double(10));        griglia.columnsSizePerc = colsWidthPerc;        this.griglia.dbOpen(Db.getConn(), sql, Db.INSTANCE, true);        this.griglia.dbPanel = this.dati;        this.dati.dbRefresh();        showListino();        mb.out("frm arti 3");        //events        //PanelEvents dl = new PanelEvents();        //dati.addDbListener(dl);        dati.addDbListener(new DbListener() {            public void statusFired(DbEvent event) {                if (event.getStatus() == tnxDbPanel.STATUS_REFRESHING || event.getStatus() == tnxDbPanel.STATUS_ADDING) {                    showListino();                    showConfezione();                    if (frmArtiConListinoPerle.this.texTipo.getText().equals("A")) {                        frmArtiConListinoPerle.this.grpSel.setSelected(frmArtiConListinoPerle.this.rbtAcq.getModel(), true);                    } else if (frmArtiConListinoPerle.this.texTipo.getText().equals("V")) {                        frmArtiConListinoPerle.this.grpSel.setSelected(frmArtiConListinoPerle.this.rbtVen.getModel(), true);                    } else {                        frmArtiConListinoPerle.this.grpSel.setSelected(frmArtiConListinoPerle.this.rbtEnt.getModel(), true);                    }                    try {                        dati.getCampiAggiuntivi().remove("immagine1");                    } catch (Exception e) {                    }                    //immagine                    refreshImmagine();                } else if (event.getStatus() == tnxDbPanel.STATUS_SAVING) {                    saveListino();                    saveConfezione();                }                if (event.getStatus() == tnxDbPanel.STATUS_ADDING) {                    labImmagine.setText("Nessuna immagine");                    labImmagine.setIcon(null);                    labImmagine1.setText("Nessuna immagine");                    labImmagine1.setIcon(null);                }            }        });        if (cheKit.isSelected()) {            btnGestKit.setEnabled(true);        }        dati.griglia = griglia;        addInternalFrameListener(new InternalFrameAdapter() {            @Override            public void internalFrameActivated(InternalFrameEvent e) {                refreshImmagine();            }        });        addComponentListener(new ComponentAdapter() {            @Override            public void componentResized(ComponentEvent e) {                refreshImmagine();            }        });    }    static int conta_i = 0;    public void trova(String codice) {        dati.ultimoCampo = "codice";        dati.ultimoValore = codice;        System.out.println("find exact:" + griglia.dbFindExact());    }    protected void showListino() {        String sql;        if (main.iniPrezziCliente == false) {            //inserisco eventuali righe vuote in articoli_prezzi            sql = "select codice from tipi_listino";            ResultSet listini = Db.openResultSet(sql);            try {                while (listini.next()) {                    sql = "insert into articoli_prezzi (articolo, listino, prezzo) values (";                    sql += Db.pc(this.texCodi.getText(), java.sql.Types.VARCHAR);                    sql += ", " + Db.pc(listini.getString(1), java.sql.Types.VARCHAR);                    sql += ", " + Db.pc(0, java.sql.Types.DECIMAL);                    sql += ")";                    Db.executeSql(sql, false);                }            } catch (Exception err) {                err.printStackTrace();            }        } else {            //inserisco eventuali righe vuote in articoli_prezzi            String listinoBase = main.getListinoBase();            try {                sql = "insert into articoli_prezzi (articolo, listino, prezzo) values (";                sql += Db.pc(this.texCodi.getText(), java.sql.Types.VARCHAR);                sql += ", " + Db.pc(listinoBase, java.sql.Types.VARCHAR);                sql += ", " + Db.pc(0, java.sql.Types.DECIMAL);                sql += ")";                Db.executeSql(sql, false);            } catch (Exception err) {                err.printStackTrace();            }        }        //visualizzo        sql = "select tipi_listino.codice, descrizione, prezzo, tipo, ricarico_flag, ricarico_perc, ricarico_listino from tipi_listino left join articoli_prezzi on codice = listino";        sql += " where articolo = " + Db.pc(this.texCodi.getText(), java.sql.Types.VARCHAR);        sql += " order by tipi_listino.codice";        ResultSet listino = Db.openResultSet(sql);        listinoModel cacheModel = new listinoModel(listino, this.dati, null);        //analizzo i dati        for (int i = 0; i < cacheModel.getRowCount(); i++) {            try {                String tipo = (String) cacheModel.getValueAt(i, 3);                String flag = (String) cacheModel.getValueAt(i, 4);                Double perc = ((BigDecimal) cacheModel.getValueAt(i, 5)).doubleValue();                String list = (String) cacheModel.getValueAt(i, 6);                if (flag.equalsIgnoreCase("S")) {                    cacheModel.setValueAt(FormatUtils.formatPerc(perc) + "% su " + list, i, 2);                }            } catch (Exception ex) {            }        }        tabListino.setModel(cacheModel);//        tabListino.setSurrendersFocusOnKeystroke(true);        //imposto le colonne della tabella listino        tabListino.setAutoResizeMode(tabListino.AUTO_RESIZE_OFF);        javax.swing.table.TableColumn col;        col = this.tabListino.getColumn("codice");        col.setMinWidth(0);        col.setWidth(0);        col.setPreferredWidth(0);        col = this.tabListino.getColumn("descrizione");        col = this.tabListino.getColumn("prezzo");        tabListino.getColumn("prezzo").setCellRenderer(new DefaultTableCellRenderer() {            @Override            public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {                Component comp = super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);                if (comp instanceof JLabel) {                    JLabel lab = (JLabel) comp;                    try {                        Double dbl = null;                        if (value instanceof BigDecimal) {                            dbl = ((BigDecimal) value).doubleValue();                        } else if (value instanceof String) {                            lab.setText((String) value);                        }                        NumberFormat f = NumberFormat.getInstance();                        f.setGroupingUsed(false);                        f.setMinimumFractionDigits(2);                        f.setMaximumFractionDigits(5);                        lab.setText(f.format(dbl));                    } catch (Exception ex) {                        lab.setText(String.valueOf(value));                    }                }                return comp;            }        });        JTextField textfield = new JTextField();        tabListino.getColumn("prezzo").setCellEditor(new DefaultCellEditor(textfield) {            @Override            public Component getTableCellEditorComponent(JTable table, Object value, boolean isSelected, int row, int column) {                JTextField textfield2 = (JTextField) super.getTableCellEditorComponent(table, value, isSelected, row, column);                textfield2.setBorder(null);                Double dbl = null;                System.out.println("get editor " + value + " clas:" + value.getClass());//                if (value instanceof BigDecimal) {//                    dbl = ((BigDecimal) value).doubleValue();//                    NumberFormat f = NumberFormat.getInstance();//                    f.setGroupingUsed(false);//                    f.setMinimumFractionDigits(2);//                    f.setMaximumFractionDigits(5);//                    textfield2.setText(f.format(dbl));//                } else {//                    textfield2.setText("0");//                }                dbl = CastUtils.toDouble0(value);                NumberFormat f = NumberFormat.getInstance();                f.setGroupingUsed(false);                f.setMinimumFractionDigits(2);                f.setMaximumFractionDigits(5);                textfield2.setText(f.format(dbl));                return textfield2;            }        });    }    protected void showConfezione() {        try {            if (cheFlagConfezione.isSelected()) {                this.cheConfezione.setSelected(true);                String sql;                //visualizzo                sql = "select * from articoli_confezione left join articoli on articolo_padre = codice";                sql += " where articolo_padre = " + Db.pc(this.texCodi.getText(), java.sql.Types.VARCHAR);                sql += " order by articolo_figlio";                ResultSet articoli = Db.openResultSet(sql);                articoliFigliModel cacheModel = new articoliFigliModel(articoli, this.dati);                this.tabConfezione.setModel(cacheModel);                //imposto le colonne della tabella listino                tabConfezione.setAutoResizeMode(tabListino.AUTO_RESIZE_OFF);                javax.swing.table.TableColumn col;                col = this.tabConfezione.getColumn("articolo_padre");                //col.setMinWidth(0);                //col.setWidth(0);                //col.setPreferredWidth(0);                col = this.tabConfezione.getColumn("articolo_figlio");                //col.setPreferredWidth(150);                col = this.tabConfezione.getColumn("quantita");                //col.setPreferredWidth(150);            } else {                this.cheConfezione.setSelected(false);            }        } catch (Exception err) {            err.printStackTrace();            this.cheConfezione.setSelected(false);        }    }    protected void saveListino() {        String sql;        NumberFormat form = NumberFormat.getInstance();//        String prezzo;        Double prezzo;        //prima dovrei controllare i prezzi inseriti        //prima elimino i prezzi da reinserire        sql = "delete from articoli_prezzi";        sql += " where articolo = " + Db.pc(this.texCodi.getText(), java.sql.Types.VARCHAR);        if (Db.executeSql(sql) == true) {            for (int i = 0; i < tabListino.getRowCount(); i++) {                try {//                    prezzo = String.valueOf(form.parse(tabListino.getValueAt(i, 2).toString()));                    Object val = tabListino.getValueAt(i, 2);                    if (val instanceof BigDecimal) {                        prezzo = ((BigDecimal) tabListino.getValueAt(i, 2)).doubleValue();                    } else {                        prezzo = Db.getDouble(tabListino.getValueAt(i, 2).toString());                    }                } catch (Exception err) {                    err.printStackTrace();                    prezzo = 0d;                }                sql = "insert into articoli_prezzi (articolo, listino, prezzo) values (";                sql += Db.pc(this.texCodi.getText(), java.sql.Types.VARCHAR);                sql += ", " + Db.pc(tabListino.getValueAt(i, 0), java.sql.Types.VARCHAR);                sql += ", " + Db.pc(prezzo, java.sql.Types.DECIMAL);                sql += ")";                Db.executeSql(sql);            }        } else {            javax.swing.JOptionPane.showMessageDialog(this, "Impossibile eliminare i prezzi precedenti", "Errore", javax.swing.JOptionPane.ERROR_MESSAGE);        }        //elimino i records temporani        sql = "delete from articoli_prezzi";        sql += " where articolo = '' or articolo is null";        Db.executeSql(sql);    }    protected void saveConfezione() {    }    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents    private void initComponents() {        grpSel = new javax.swing.ButtonGroup();        popupImmagine = new javax.swing.JPopupMenu();        menScegli = new javax.swing.JMenuItem();        menElimina = new javax.swing.JMenuItem();        popupCat = new javax.swing.JPopupMenu();        menEliminaCat = new javax.swing.JMenuItem();        panAlto = new javax.swing.JPanel();        jToolBar1 = new javax.swing.JToolBar();        butNew = new javax.swing.JButton();        jLabel1 = new javax.swing.JLabel();        butDele = new javax.swing.JButton();        jLabel11 = new javax.swing.JLabel();        jLabel12 = new javax.swing.JLabel();        jLabel13 = new javax.swing.JLabel();        butFind = new javax.swing.JButton();        jLabel131 = new javax.swing.JLabel();        butFirs = new javax.swing.JButton();        butPrev = new javax.swing.JButton();        butNext = new javax.swing.JButton();        butLast = new javax.swing.JButton();        jLabel132 = new javax.swing.JLabel();        butStampaElenco = new javax.swing.JButton();        butNew1 = new javax.swing.JButton();        butImportExcel = new javax.swing.JButton();        jToolBar3 = new javax.swing.JToolBar();        jLabel9 = new javax.swing.JLabel();        texSearch = new javax.swing.JTextField();        jButton3 = new javax.swing.JButton();        tabCent = new javax.swing.JTabbedPane();        panDati = new javax.swing.JPanel();        dati = new tnxbeans.tnxDbPanel();        texUm = new tnxbeans.tnxTextField();        texCodi = new tnxbeans.tnxTextField();        jLabel2 = new javax.swing.JLabel();        jLabel21 = new javax.swing.JLabel();        jLabel22 = new javax.swing.JLabel();        jLabel231 = new javax.swing.JLabel();        jLabel24 = new javax.swing.JLabel();        jLabel4 = new javax.swing.JLabel();        texUm1 = new tnxbeans.tnxTextField();        jTabbedPane1 = new javax.swing.JTabbedPane();        jPanel2 = new javax.swing.JPanel();        jLabel3 = new javax.swing.JLabel();        jScrollPane2 = new javax.swing.JScrollPane();        tabListino = new MyTable();        ;        panConfezione = new javax.swing.JPanel();        jScrollPane3 = new javax.swing.JScrollPane();        tabConfezione = new javax.swing.JTable();        jLabel5 = new javax.swing.JLabel();        cheConfezione = new javax.swing.JCheckBox();        cheFlagConfezione = new tnxbeans.tnxCheckBox();        texDescrizioneEn = new tnxbeans.tnxMemoField();        texDescrizione = new tnxbeans.tnxMemoField();        jLabel6 = new javax.swing.JLabel();        texUm2 = new tnxbeans.tnxTextField();        jLabel25 = new javax.swing.JLabel();        jLabel7 = new javax.swing.JLabel();        texUm3 = new tnxbeans.tnxTextField();        jLabel26 = new javax.swing.JLabel();        tnxCheckBox1 = new tnxbeans.tnxCheckBox();        rbtAcq = new javax.swing.JRadioButton();        rbtVen = new javax.swing.JRadioButton();        rbtEnt = new javax.swing.JRadioButton();        jLabel8 = new javax.swing.JLabel();        texTipo = new tnxbeans.tnxTextField();        iva = new tnxbeans.tnxComboField();        cheKit = new tnxbeans.tnxCheckBox();        btnGestKit = new javax.swing.JButton();        cheGestioneMatricole = new tnxbeans.tnxCheckBox();        jSeparator1 = new javax.swing.JSeparator();        jSeparator2 = new javax.swing.JSeparator();        jLabel10 = new javax.swing.JLabel();        jLabel14 = new javax.swing.JLabel();        texUm4 = new tnxbeans.tnxTextField();        texUm5 = new tnxbeans.tnxTextField();        labImmagine = new javax.swing.JLabel();        cheGestioneLotti = new tnxbeans.tnxCheckBox();        non_applicare_perc = new tnxbeans.tnxCheckBox();        labStatusImg = new org.jdesktop.swingx.JXBusyLabel();        panel_dati_web = new javax.swing.JPanel();        dati_web = new tnxbeans.tnxDbPanel();        jLabel28 = new javax.swing.JLabel();        texCodiWeb = new tnxbeans.tnxTextField();        jLabel29 = new javax.swing.JLabel();        jLabel30 = new javax.swing.JLabel();        jLabel31 = new javax.swing.JLabel();        web_descrizione_lang = new tnxbeans.tnxMemoFieldLang();        colore_web = new tnxbeans.tnxTextFieldLang();        jLabel32 = new javax.swing.JLabel();        jLabel33 = new javax.swing.JLabel();        dimensioni_web = new tnxbeans.tnxTextFieldLang();        jLabel34 = new javax.swing.JLabel();        mod_vendita_web = new tnxbeans.tnxTextFieldLang();        jButton4 = new javax.swing.JButton();        c1 = new org.jdesktop.swingx.JXHyperlink();        c2 = new org.jdesktop.swingx.JXHyperlink();        c3 = new org.jdesktop.swingx.JXHyperlink();        c4 = new org.jdesktop.swingx.JXHyperlink();        c5 = new org.jdesktop.swingx.JXHyperlink();        jLabel35 = new javax.swing.JLabel();        jLabel36 = new javax.swing.JLabel();        jLabel37 = new javax.swing.JLabel();        c1db = new tnxbeans.tnxTextField();        c2db = new tnxbeans.tnxTextField();        c3db = new tnxbeans.tnxTextField();        c4db = new tnxbeans.tnxTextField();        c5db = new tnxbeans.tnxTextField();        labImmagine1 = new javax.swing.JLabel();        jLabel38 = new javax.swing.JLabel();        visibile_online = new tnxbeans.tnxCheckBox();        jLabel39 = new javax.swing.JLabel();        labStatusImgWeb = new org.jdesktop.swingx.JXBusyLabel();        jLabel40 = new javax.swing.JLabel();        texMinimo = new tnxbeans.tnxTextField();        panElen = new javax.swing.JPanel();        jScrollPane1 = new javax.swing.JScrollPane();        griglia = new tnxbeans.tnxDbGrid();        jPanel1 = new javax.swing.JPanel();        butUndo = new javax.swing.JButton();        butSave = new javax.swing.JButton();        menScegli.setText("Scegli Immagine");        menScegli.addActionListener(new java.awt.event.ActionListener() {            public void actionPerformed(java.awt.event.ActionEvent evt) {                menScegliActionPerformed(evt);            }        });        popupImmagine.add(menScegli);        menElimina.setText("Elimina");        menElimina.addActionListener(new java.awt.event.ActionListener() {            public void actionPerformed(java.awt.event.ActionEvent evt) {                menEliminaActionPerformed(evt);            }        });        popupImmagine.add(menElimina);        menEliminaCat.setText("Elimina");        menEliminaCat.addActionListener(new java.awt.event.ActionListener() {            public void actionPerformed(java.awt.event.ActionEvent evt) {                menEliminaCatActionPerformed(evt);            }        });        popupCat.add(menEliminaCat);        setClosable(true);        setIconifiable(true);        setMaximizable(true);        setResizable(true);        setTitle("Articoli");        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {            }            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {            }            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {                formInternalFrameClosing(evt);            }            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {            }            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {            }            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {            }            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {            }        });        panAlto.setLayout(new java.awt.BorderLayout());        jToolBar1.setRollover(true);        butNew.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/icons/tango-icon-theme-080/16x16/actions/document-new.png"))); // NOI18N        butNew.setText("Nuovo");        butNew.setIconTextGap(1);        butNew.setMargin(new java.awt.Insets(2, 2, 2, 2));        butNew.addActionListener(new java.awt.event.ActionListener() {            public void actionPerformed(java.awt.event.ActionEvent evt) {                butNewActionPerformed(evt);            }        });        jToolBar1.add(butNew);        jLabel1.setText(" ");        jToolBar1.add(jLabel1);        butDele.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/icons/tango-icon-theme-080/16x16/places/user-trash.png"))); // NOI18N        butDele.setText("Elimina");        butDele.setIconTextGap(1);        butDele.setMargin(new java.awt.Insets(2, 2, 2, 2));        butDele.addActionListener(new java.awt.event.ActionListener() {            public void actionPerformed(java.awt.event.ActionEvent evt) {                butDeleActionPerformed(evt);            }        });        jToolBar1.add(butDele);        jLabel11.setText(" ");        jToolBar1.add(jLabel11);        jLabel12.setText(" ");        jToolBar1.add(jLabel12);        jLabel13.setText(" ");        jToolBar1.add(jLabel13);        butFind.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/icons/tango-icon-theme-080/16x16/actions/edit-find.png"))); // NOI18N        butFind.setText("Trova");        butFind.setMargin(new java.awt.Insets(2, 2, 2, 2));        butFind.addActionListener(new java.awt.event.ActionListener() {            public void actionPerformed(java.awt.event.ActionEvent evt) {                butFindActionPerformed(evt);            }        });        jToolBar1.add(butFind);        jLabel131.setText(" ");        jToolBar1.add(jLabel131);        butFirs.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/icons/tango-icon-theme-080/16x16/actions/go-first.png"))); // NOI18N        butFirs.setMargin(new java.awt.Insets(2, 2, 2, 2));        butFirs.addActionListener(new java.awt.event.ActionListener() {            public void actionPerformed(java.awt.event.ActionEvent evt) {                butFirsActionPerformed(evt);            }        });        jToolBar1.add(butFirs);        butPrev.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/icons/tango-icon-theme-080/16x16/actions/go-previous.png"))); // NOI18N        butPrev.setMargin(new java.awt.Insets(2, 2, 2, 2));        butPrev.addActionListener(new java.awt.event.ActionListener() {            public void actionPerformed(java.awt.event.ActionEvent evt) {                butPrevActionPerformed(evt);            }        });        jToolBar1.add(butPrev);        butNext.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/icons/tango-icon-theme-080/16x16/actions/go-next.png"))); // NOI18N        butNext.setMargin(new java.awt.Insets(2, 2, 2, 2));        butNext.addActionListener(new java.awt.event.ActionListener() {            public void actionPerformed(java.awt.event.ActionEvent evt) {                butNextActionPerformed(evt);            }        });        jToolBar1.add(butNext);        butLast.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/icons/tango-icon-theme-080/16x16/actions/go-last.png"))); // NOI18N        butLast.setMargin(new java.awt.Insets(2, 2, 2, 2));        butLast.addActionListener(new java.awt.event.ActionListener() {            public void actionPerformed(java.awt.event.ActionEvent evt) {                butLastActionPerformed(evt);            }        });        jToolBar1.add(butLast);        jLabel132.setText(" ");        jToolBar1.add(jLabel132);        butStampaElenco.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/icons/tango-icon-theme-080/16x16/actions/document-print.png"))); // NOI18N        butStampaElenco.setText("Stampa elenco");        butStampaElenco.setMargin(new java.awt.Insets(2, 2, 2, 2));        butStampaElenco.addActionListener(new java.awt.event.ActionListener() {            public void actionPerformed(java.awt.event.ActionEvent evt) {                butStampaElencoActionPerformed(evt);            }        });        jToolBar1.add(butStampaElenco);        butNew1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/icons/tango-icon-theme-080/16x16/actions/edit-copy.png"))); // NOI18N        butNew1.setText("Duplica");        butNew1.setFocusable(false);        butNew1.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);        butNew1.setMargin(new java.awt.Insets(2, 2, 2, 2));        butNew1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);        butNew1.addActionListener(new java.awt.event.ActionListener() {            public void actionPerformed(java.awt.event.ActionEvent evt) {                butNew1ActionPerformed(evt);            }        });        jToolBar1.add(butNew1);        butImportExcel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/icons/tango-icon-theme-080/16x16/actions/go-jump.png"))); // NOI18N        butImportExcel.setText("Import da Excel");        butImportExcel.setFocusable(false);        butImportExcel.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);        butImportExcel.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);        butImportExcel.addActionListener(new java.awt.event.ActionListener() {            public void actionPerformed(java.awt.event.ActionEvent evt) {                butImportExcelActionPerformed(evt);            }        });        jToolBar1.add(butImportExcel);        panAlto.add(jToolBar1, java.awt.BorderLayout.CENTER);        jToolBar3.setRollover(true);        jLabel9.setText(" Cerca ");        jToolBar3.add(jLabel9);        texSearch.setMaximumSize(new java.awt.Dimension(250, 20));        texSearch.setMinimumSize(new java.awt.Dimension(6, 5));        texSearch.addActionListener(new java.awt.event.ActionListener() {            public void actionPerformed(java.awt.event.ActionEvent evt) {                texSearchActionPerformed(evt);            }        });        texSearch.addKeyListener(new java.awt.event.KeyAdapter() {            public void keyPressed(java.awt.event.KeyEvent evt) {                texSearchKeyPressed(evt);            }            public void keyReleased(java.awt.event.KeyEvent evt) {                texSearchKeyReleased(evt);            }        });        jToolBar3.add(texSearch);        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/icons/tango-icon-theme-080/16x16/actions/edit-find.png"))); // NOI18N        jButton3.setText("Mostra Tutti");        jButton3.setFocusable(false);        jButton3.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);        jButton3.setMaximumSize(new java.awt.Dimension(90, 20));        jButton3.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);        jButton3.addActionListener(new java.awt.event.ActionListener() {            public void actionPerformed(java.awt.event.ActionEvent evt) {                jButton3ActionPerformed(evt);            }        });        jToolBar3.add(jButton3);        panAlto.add(jToolBar3, java.awt.BorderLayout.SOUTH);        getContentPane().add(panAlto, java.awt.BorderLayout.NORTH);        tabCent.setName("dati"); // NOI18N        panDati.setName("dati"); // NOI18N        panDati.setLayout(new java.awt.BorderLayout());        texUm.setText("um");        texUm.setDbDescCampo("");        texUm.setDbNomeCampo("um");        texUm.setDbTipoCampo("");        texUm.setmaxChars(3);        texCodi.setText("codice");        texCodi.setDbDescCampo("");        texCodi.setDbNomeCampo("codice");        texCodi.setDbTipoCampo("");        texCodi.setmaxChars(20);        texCodi.addFocusListener(new java.awt.event.FocusAdapter() {            public void focusLost(java.awt.event.FocusEvent evt) {                texCodiFocusLost(evt);            }        });        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);        jLabel2.setText("unitÃ  di misura");        jLabel21.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);        jLabel21.setText("codice");        jLabel22.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);        jLabel22.setText("descrizione");        jLabel231.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);        jLabel231.setText("iva");        jLabel24.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);        jLabel24.setText("in inglese");        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);        jLabel4.setText("in inglese");        texUm1.setText("um");        texUm1.setDbDescCampo("");        texUm1.setDbNomeCampo("um_en");        texUm1.setDbTipoCampo("");        texUm1.setmaxChars(3);        jTabbedPane1.setFont(new java.awt.Font("Dialog", 1, 11));        jLabel3.setFont(new java.awt.Font("Dialog", 1, 11));        jLabel3.setText("Prezzi listini");        tabListino.setModel(new javax.swing.table.DefaultTableModel(            new Object [][] {                {null, null, null, null},                {null, null, null, null},                {null, null, null, null},                {null, null, null, null}            },            new String [] {                "Title 1", "Title 2", "Title 3", "Title 4"            }        ));        jScrollPane2.setViewportView(tabListino);        org.jdesktop.layout.GroupLayout jPanel2Layout = new org.jdesktop.layout.GroupLayout(jPanel2);        jPanel2.setLayout(jPanel2Layout);        jPanel2Layout.setHorizontalGroup(            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)            .add(jPanel2Layout.createSequentialGroup()                .addContainerGap()                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)                    .add(jScrollPane2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 235, Short.MAX_VALUE)                    .add(jLabel3))                .addContainerGap())        );        jPanel2Layout.setVerticalGroup(            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)            .add(jPanel2Layout.createSequentialGroup()                .addContainerGap()                .add(jLabel3)                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)                .add(jScrollPane2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 126, Short.MAX_VALUE)                .addContainerGap())        );        jTabbedPane1.addTab("Prezzi", jPanel2);        tabConfezione.setFont(new java.awt.Font("Dialog", 0, 11));        tabConfezione.setModel(new javax.swing.table.DefaultTableModel(            new Object [][] {                {null, null, null, null},                {null, null, null, null},                {null, null, null, null},                {null, null, null, null}            },            new String [] {                "Title 1", "Title 2", "Title 3", "Title 4"            }        ));        jScrollPane3.setViewportView(tabConfezione);        jLabel5.setFont(new java.awt.Font("Dialog", 1, 11));        jLabel5.setText("articoli compresi in questa confezione");        cheConfezione.setFont(new java.awt.Font("Dialog", 1, 11));        cheConfezione.setText("Articolo tipo Confezione");        cheConfezione.addActionListener(new java.awt.event.ActionListener() {            public void actionPerformed(java.awt.event.ActionEvent evt) {                cheConfezioneActionPerformed(evt);            }        });        org.jdesktop.layout.GroupLayout panConfezioneLayout = new org.jdesktop.layout.GroupLayout(panConfezione);        panConfezione.setLayout(panConfezioneLayout);        panConfezioneLayout.setHorizontalGroup(            panConfezioneLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)            .add(panConfezioneLayout.createSequentialGroup()                .add(5, 5, 5)                .add(cheConfezione))            .add(panConfezioneLayout.createSequentialGroup()                .add(10, 10, 10)                .add(jLabel5))            .add(panConfezioneLayout.createSequentialGroup()                .addContainerGap()                .add(jScrollPane3, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 235, Short.MAX_VALUE)                .addContainerGap())        );        panConfezioneLayout.setVerticalGroup(            panConfezioneLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)            .add(panConfezioneLayout.createSequentialGroup()                .add(136, 136, 136)                .add(cheConfezione)                .add(2, 2, 2)                .add(jLabel5)                .add(5, 5, 5)                .add(jScrollPane3, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 27, Short.MAX_VALUE)                .addContainerGap())        );        jTabbedPane1.addTab("Confezione", panConfezione);        cheFlagConfezione.setBackground(new java.awt.Color(255, 51, 51));        cheFlagConfezione.setText("flag confezione");        cheFlagConfezione.setDbDescCampo("");        cheFlagConfezione.setDbNomeCampo("flag_confezione");        cheFlagConfezione.setDbTipoCampo("");        cheFlagConfezione.setVisible(false);        texDescrizioneEn.setDbNomeCampo("descrizione_en");        texDescrizioneEn.setDbSalvare(false);        texDescrizioneEn.addFocusListener(new java.awt.event.FocusAdapter() {            public void focusLost(java.awt.event.FocusEvent evt) {                texDescrizioneEnFocusLost(evt);            }        });        texDescrizione.setDbNomeCampo("descrizione");        texDescrizione.setDbSalvare(false);        texDescrizione.addFocusListener(new java.awt.event.FocusAdapter() {            public void focusLost(java.awt.event.FocusEvent evt) {                texDescrizioneFocusLost(evt);            }        });        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);        jLabel6.setText("peso");        texUm2.setText("kg");        texUm2.setDbDescCampo("");        texUm2.setDbNomeCampo("peso_kg");        texUm2.setDbTipoCampo("numerico");        texUm2.setmaxChars(15);        jLabel25.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);        jLabel25.setText("Kg");        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);        jLabel7.setText("peso/collo");        texUm3.setText("kg");        texUm3.setDbDescCampo("");        texUm3.setDbNomeCampo("peso_kg_collo");        texUm3.setDbTipoCampo("numerico");        texUm3.setmaxChars(15);        jLabel26.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);        jLabel26.setText("Kg");        tnxCheckBox1.setText("Servizio");        tnxCheckBox1.setToolTipText("Nel caso di articolo di tipo Servizio esso non verrÃ  movimentato");        tnxCheckBox1.setDbDescCampo("");        tnxCheckBox1.setDbNomeCampo("servizio");        tnxCheckBox1.setDbTipoCampo("");        tnxCheckBox1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);        tnxCheckBox1.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);        tnxCheckBox1.addActionListener(new java.awt.event.ActionListener() {            public void actionPerformed(java.awt.event.ActionEvent evt) {                tnxCheckBox1ActionPerformed(evt);            }        });        grpSel.add(rbtAcq);        rbtAcq.setText("Acquisto");        rbtAcq.addActionListener(new java.awt.event.ActionListener() {            public void actionPerformed(java.awt.event.ActionEvent evt) {                rbtAcqActionPerformed(evt);            }        });        grpSel.add(rbtVen);        rbtVen.setText("Vendita");        rbtVen.addActionListener(new java.awt.event.ActionListener() {            public void actionPerformed(java.awt.event.ActionEvent evt) {                rbtVenActionPerformed(evt);            }        });        grpSel.add(rbtEnt);        rbtEnt.setText("Entrambi");        rbtEnt.addActionListener(new java.awt.event.ActionListener() {            public void actionPerformed(java.awt.event.ActionEvent evt) {                rbtEntActionPerformed(evt);            }        });        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);        jLabel8.setText("tipologia");        jLabel8.setFocusable(false);        jLabel8.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);        texTipo.setBackground(new java.awt.Color(255, 51, 51));        texTipo.setText("tipo");        texTipo.setDbNomeCampo("tipo");        iva.setEditable(false);        iva.setDbDescCampo("");        iva.setDbNomeCampo("iva");        iva.setDbTipoCampo("");        iva.setDbTrovaMentreScrive(true);        iva.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {            }            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {            }            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {                ivaPopupMenuWillBecomeVisible(evt);            }        });        cheKit.setText("KIT");        cheKit.setToolTipText("Nel caso di articolo di tipo Servizio esso non verrÃ  movimentato ed il prezzo rimarrÃ  quello base senza ricarico per listini a percentuale");        cheKit.setDbDescCampo("");        cheKit.setDbNomeCampo("flag_kit");        cheKit.setDbTipoCampo("");        cheKit.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);        cheKit.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);        cheKit.addItemListener(new java.awt.event.ItemListener() {            public void itemStateChanged(java.awt.event.ItemEvent evt) {                cheKitItemStateChanged(evt);            }        });        btnGestKit.setText("GESTISCI KIT");        btnGestKit.setEnabled(false);        btnGestKit.addActionListener(new java.awt.event.ActionListener() {            public void actionPerformed(java.awt.event.ActionEvent evt) {                btnGestKitActionPerformed(evt);            }        });        cheGestioneMatricole.setText("Gestione matricole");        cheGestioneMatricole.setToolTipText("<html>\nAbilitando quest'attributo ogni volta che si va a movimentare l'articolo verranno richiesti N codici matricola (o serial number) per la quantitÃ  del movimento\n</html>");        cheGestioneMatricole.setDbDescCampo("");        cheGestioneMatricole.setDbNomeCampo("gestione_matricola");        cheGestioneMatricole.setDbTipoCampo("");        cheGestioneMatricole.addItemListener(new java.awt.event.ItemListener() {            public void itemStateChanged(java.awt.event.ItemEvent evt) {                cheGestioneMatricoleItemStateChanged(evt);            }        });        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);        jSeparator2.setOrientation(javax.swing.SwingConstants.VERTICAL);        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);        jLabel10.setText("Codice Fornitore");        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);        jLabel14.setText("Codice a Barre");        texUm4.setText("codice_fornitore");        texUm4.setDbDescCampo("");        texUm4.setDbNomeCampo("codice_fornitore");        texUm4.setDbTipoCampo("");        texUm5.setText("codice_a_barre");        texUm5.setDbDescCampo("");        texUm5.setDbNomeCampo("codice_a_barre");        texUm5.setDbTipoCampo("");        labImmagine.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);        labImmagine.setText("Nessuna immagine");        labImmagine.setToolTipText("Clicca con il tasto destro per le opzioni");        labImmagine.setBorder(javax.swing.BorderFactory.createLineBorder(javax.swing.UIManager.getDefaults().getColor("Button.shadow")));        labImmagine.addMouseListener(new java.awt.event.MouseAdapter() {            public void mouseClicked(java.awt.event.MouseEvent evt) {                labImmagineMouseClicked(evt);            }        });        cheGestioneLotti.setText("Gestione lotti");        cheGestioneLotti.setToolTipText("<html>Abilitando quest'attributo ogni volta che si va a movimentare l'articolo verra' richiesto il numero del lotto.\n<br>\nIn fase di carico si deve inserire il numero del lotto, in fase di scarico si deve scegliere fra i lotti disponibili.<br>\n</html>");        cheGestioneLotti.setDbDescCampo("");        cheGestioneLotti.setDbNomeCampo("gestione_lotti");        cheGestioneLotti.setDbTipoCampo("");        cheGestioneLotti.addItemListener(new java.awt.event.ItemListener() {            public void itemStateChanged(java.awt.event.ItemEvent evt) {                cheGestioneLottiItemStateChanged(evt);            }        });        non_applicare_perc.setText("Non applicare la maggiorazione o diminuzione sui listini a percentuale");        non_applicare_perc.setDbNomeCampo("non_applicare_percentuale");        labStatusImg.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));        labStatusImg.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);        labStatusImg.setText("...");        labStatusImg.setBusy(true);        labStatusImg.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);        org.jdesktop.layout.GroupLayout datiLayout = new org.jdesktop.layout.GroupLayout(dati);        dati.setLayout(datiLayout);        datiLayout.setHorizontalGroup(            datiLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)            .add(datiLayout.createSequentialGroup()                .add(datiLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)                    .add(org.jdesktop.layout.GroupLayout.TRAILING, datiLayout.createSequentialGroup()                        .addContainerGap()                        .add(datiLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)                            .add(datiLayout.createSequentialGroup()                                .add(jLabel21, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 100, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)                                .add(texCodi, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 130, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)                                .add(jSeparator1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)                                .add(cheKit, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)                                .add(btnGestKit)                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)                                .add(jSeparator2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)                                .add(cheGestioneMatricole, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)                                .add(cheGestioneLotti, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)                                .add(cheFlagConfezione, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)                                .add(texTipo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))                            .add(datiLayout.createSequentialGroup()                                .add(jLabel22, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 99, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)                                .add(texDescrizione, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))                            .add(datiLayout.createSequentialGroup()                                .add(5, 5, 5)                                .add(datiLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)                                    .add(org.jdesktop.layout.GroupLayout.LEADING, jLabel2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)                                    .add(org.jdesktop.layout.GroupLayout.LEADING, jLabel231, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)                                    .add(org.jdesktop.layout.GroupLayout.LEADING, jLabel24, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 95, Short.MAX_VALUE))                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)                                .add(datiLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)                                    .add(texDescrizioneEn, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)                                    .add(datiLayout.createSequentialGroup()                                        .add(texUm, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 44, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)                                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)                                        .add(jLabel6, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 60, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)                                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)                                        .add(texUm2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 76, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)                                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)                                        .add(jLabel26)                                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)                                        .add(jLabel10, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 120, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)                                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)                                        .add(texUm4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 150, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))                                    .add(iva, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))))                    .add(datiLayout.createSequentialGroup()                        .addContainerGap()                        .add(datiLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)                            .add(org.jdesktop.layout.GroupLayout.LEADING, jLabel8, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 100, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)                            .add(org.jdesktop.layout.GroupLayout.LEADING, jLabel4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 100, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)                        .add(datiLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)                            .add(datiLayout.createSequentialGroup()                                .add(texUm1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 44, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)                                .add(jLabel7, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 60, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)                                .add(texUm3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 70, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)                                .add(jLabel25)                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)                                .add(jLabel14, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 120, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)                                .add(texUm5, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 150, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))                            .add(datiLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)                                .add(org.jdesktop.layout.GroupLayout.LEADING, datiLayout.createSequentialGroup()                                    .add(tnxCheckBox1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 125, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)                                    .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)                                    .add(non_applicare_perc, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))                                .add(org.jdesktop.layout.GroupLayout.LEADING, datiLayout.createSequentialGroup()                                    .add(rbtAcq)                                    .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)                                    .add(rbtVen)                                    .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)                                    .add(rbtEnt)))))                    .add(datiLayout.createSequentialGroup()                        .add(114, 114, 114)                        .add(jTabbedPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 260, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)                        .add(labImmagine, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 240, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)                        .add(labStatusImg, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))                .addContainerGap())        );        datiLayout.linkSize(new java.awt.Component[] {texUm2, texUm3}, org.jdesktop.layout.GroupLayout.HORIZONTAL);        datiLayout.setVerticalGroup(            datiLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)            .add(datiLayout.createSequentialGroup()                .addContainerGap()                .add(datiLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jSeparator1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 23, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)                    .add(org.jdesktop.layout.GroupLayout.TRAILING, datiLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)                        .add(datiLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)                            .add(jLabel21, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 17, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)                            .add(texCodi, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)                            .add(cheKit, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)                            .add(btnGestKit))                        .add(datiLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)                            .add(cheFlagConfezione, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)                            .add(texTipo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)                            .add(cheGestioneMatricole, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)                            .add(cheGestioneLotti, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))                    .add(jSeparator2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 23, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)                .add(datiLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)                    .add(jLabel22)                    .add(texDescrizione, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 47, Short.MAX_VALUE))                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)                .add(datiLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)                    .add(jLabel24)                    .add(texDescrizioneEn, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 46, Short.MAX_VALUE))                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)                .add(datiLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)                    .add(datiLayout.createSequentialGroup()                        .add(datiLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)                            .add(jLabel231, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 14, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)                            .add(iva, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 21, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)                        .add(datiLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)                            .add(jLabel2)                            .add(texUm, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)                            .add(jLabel6, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)                            .add(texUm2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)                            .add(jLabel26)                            .add(jLabel10)                            .add(texUm4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)                        .add(datiLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)                            .add(jLabel4)                            .add(texUm1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)                            .add(jLabel7, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 20, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)                            .add(texUm3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)                            .add(jLabel25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)                            .add(jLabel14)                            .add(texUm5, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)                        .add(datiLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)                            .add(jLabel8)                            .add(rbtAcq)                            .add(rbtVen)                            .add(rbtEnt))                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)                        .add(datiLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)                            .add(tnxCheckBox1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)                            .add(non_applicare_perc, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)                        .add(datiLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)                            .add(jTabbedPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 198, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)                            .add(labImmagine, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 198, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))                    .add(labStatusImg, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))                .addContainerGap())        );        datiLayout.linkSize(new java.awt.Component[] {cheGestioneMatricole, cheKit}, org.jdesktop.layout.GroupLayout.VERTICAL);        panDati.add(dati, java.awt.BorderLayout.CENTER);        tabCent.addTab("Dati", panDati);        panel_dati_web.setLayout(new java.awt.BorderLayout());        jLabel28.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);        jLabel28.setText("codice");        texCodiWeb.setText("codice");        texCodiWeb.setDbDescCampo("");        texCodiWeb.setDbNomeCampo("codice");        texCodiWeb.setDbSalvare(false);        texCodiWeb.setDbTipoCampo("");        texCodiWeb.setmaxChars(20);        texCodiWeb.addFocusListener(new java.awt.event.FocusAdapter() {            public void focusLost(java.awt.event.FocusEvent evt) {                texCodiWebFocusLost(evt);            }        });        jLabel29.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);        jLabel29.setText("descrizione");        jLabel30.setText("Categorie");        jLabel31.setText("|");        web_descrizione_lang.setDbNomeCampo("descrizione");        web_descrizione_lang.addFocusListener(new java.awt.event.FocusAdapter() {            public void focusLost(java.awt.event.FocusEvent evt) {                web_descrizione_langFocusLost(evt);            }        });        colore_web.setDbNomeCampo("colore");        jLabel32.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);        jLabel32.setText("colore");        jLabel33.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);        jLabel33.setText("dimensioni");        dimensioni_web.setDbNomeCampo("dimensioni");        jLabel34.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);        jLabel34.setText("mod. vendita");        mod_vendita_web.setDbNomeCampo("modalita_vendita");        jButton4.setText("Gestione Categorie");        jButton4.addActionListener(new java.awt.event.ActionListener() {            public void actionPerformed(java.awt.event.ActionEvent evt) {                jButton4ActionPerformed(evt);            }        });        c1.setText("...");        c1.setName("1"); // NOI18N        c1.addMouseListener(new java.awt.event.MouseAdapter() {            public void mouseClicked(java.awt.event.MouseEvent evt) {                c1MouseClicked(evt);            }            public void mouseReleased(java.awt.event.MouseEvent evt) {                c1MouseReleased(evt);            }        });        c1.addActionListener(new java.awt.event.ActionListener() {            public void actionPerformed(java.awt.event.ActionEvent evt) {                c1ActionPerformed(evt);            }        });        c2.setText("...");        c2.setName("2"); // NOI18N        c2.addMouseListener(new java.awt.event.MouseAdapter() {            public void mouseClicked(java.awt.event.MouseEvent evt) {                c2MouseClicked(evt);            }        });        c2.addActionListener(new java.awt.event.ActionListener() {            public void actionPerformed(java.awt.event.ActionEvent evt) {                c2ActionPerformed(evt);            }        });        c3.setText("...");        c3.setName("3"); // NOI18N        c3.addMouseListener(new java.awt.event.MouseAdapter() {            public void mouseClicked(java.awt.event.MouseEvent evt) {                c3MouseClicked(evt);            }        });        c3.addActionListener(new java.awt.event.ActionListener() {            public void actionPerformed(java.awt.event.ActionEvent evt) {                c3ActionPerformed(evt);            }        });        c4.setText("...");        c4.setName("4"); // NOI18N        c4.addMouseListener(new java.awt.event.MouseAdapter() {            public void mouseClicked(java.awt.event.MouseEvent evt) {                c4MouseClicked(evt);            }        });        c4.addActionListener(new java.awt.event.ActionListener() {            public void actionPerformed(java.awt.event.ActionEvent evt) {                c4ActionPerformed(evt);            }        });        c5.setText("...");        c5.setName("5"); // NOI18N        c5.addMouseListener(new java.awt.event.MouseAdapter() {            public void mouseClicked(java.awt.event.MouseEvent evt) {                c5MouseClicked(evt);            }        });        c5.addActionListener(new java.awt.event.ActionListener() {            public void actionPerformed(java.awt.event.ActionEvent evt) {                c5ActionPerformed(evt);            }        });        jLabel35.setText("|");        jLabel36.setText("|");        jLabel37.setText("|");        c1db.setText("c1");        c1db.setDbDescCampo("");        c1db.setDbNomeCampo("cat1");        c1db.setDbTipoCampo("");        c1db.setmaxChars(3);        c2db.setText("c2");        c2db.setDbDescCampo("");        c2db.setDbNomeCampo("cat2");        c2db.setDbTipoCampo("");        c2db.setmaxChars(3);        c3db.setText("c3");        c3db.setDbDescCampo("");        c3db.setDbNomeCampo("cat3");        c3db.setDbTipoCampo("");        c3db.setmaxChars(3);        c4db.setText("c4");        c4db.setDbDescCampo("");        c4db.setDbNomeCampo("cat4");        c4db.setDbTipoCampo("");        c4db.setmaxChars(3);        c5db.setText("c5");        c5db.setDbDescCampo("");        c5db.setDbNomeCampo("cat5");        c5db.setDbTipoCampo("");        c5db.setmaxChars(3);        labImmagine1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);        labImmagine1.setText("Nessuna immagine");        labImmagine1.setToolTipText("Clicca con il tasto destro per le opzioni");        labImmagine1.setBorder(javax.swing.BorderFactory.createLineBorder(javax.swing.UIManager.getDefaults().getColor("Button.shadow")));        labImmagine1.addMouseListener(new java.awt.event.MouseAdapter() {            public void mouseClicked(java.awt.event.MouseEvent evt) {                labImmagine1MouseClicked(evt);            }        });        jLabel38.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);        jLabel38.setText("immagine");        visibile_online.setText("Visibile");        visibile_online.setToolTipText("Nel caso di articolo di tipo Servizio esso non verrÃ  movimentato");        visibile_online.setDbDescCampo("");        visibile_online.setDbNomeCampo("visibile_online");        visibile_online.setDbTipoCampo("");        visibile_online.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);        visibile_online.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);        visibile_online.addActionListener(new java.awt.event.ActionListener() {            public void actionPerformed(java.awt.event.ActionEvent evt) {                visibile_onlineActionPerformed(evt);            }        });        jLabel39.setText("|");        labStatusImgWeb.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));        labStatusImgWeb.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);        labStatusImgWeb.setText("...");        labStatusImgWeb.setBusy(true);        labStatusImgWeb.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);        jLabel40.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);        jLabel40.setText("minimo ordinabile");        texMinimo.setText("ordine_minimo");        texMinimo.setDbDescCampo("");        texMinimo.setDbModificato(true);        texMinimo.setDbNomeCampo("ordine_minimo");        texMinimo.setDbTipoCampo("numerico");        texMinimo.setmaxChars(20);        texMinimo.addFocusListener(new java.awt.event.FocusAdapter() {            public void focusLost(java.awt.event.FocusEvent evt) {                texMinimoFocusLost(evt);            }        });        org.jdesktop.layout.GroupLayout dati_webLayout = new org.jdesktop.layout.GroupLayout(dati_web);        dati_web.setLayout(dati_webLayout);        dati_webLayout.setHorizontalGroup(            dati_webLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)            .add(dati_webLayout.createSequentialGroup()                .addContainerGap()                .add(dati_webLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)                    .add(dati_webLayout.createSequentialGroup()                        .add(jLabel28, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 100, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)                        .add(texCodiWeb, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 130, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)                        .add(visibile_online, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)                        .add(jLabel39)                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)                        .add(jLabel30)                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)                        .add(c1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)                        .add(jLabel31)                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)                        .add(c2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)                        .add(jLabel35)                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)                        .add(c3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)                        .add(jLabel36)                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)                        .add(c4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)                        .add(jLabel37)                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)                        .add(c5, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)                        .add(jButton4)                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)                        .add(c1db, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 5, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)                        .add(c2db, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 5, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)                        .add(c3db, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 5, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)                        .add(c4db, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 5, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)                        .add(c5db, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 5, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))                    .add(dati_webLayout.createSequentialGroup()                        .add(dati_webLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)                            .add(jLabel29, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 99, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)                            .add(jLabel32, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 99, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)                        .add(dati_webLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)                            .add(colore_web, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 731, Short.MAX_VALUE)                            .add(web_descrizione_lang, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 731, Short.MAX_VALUE)))                    .add(org.jdesktop.layout.GroupLayout.TRAILING, dati_webLayout.createSequentialGroup()                        .add(jLabel33, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 99, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)                        .add(dimensioni_web, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 731, Short.MAX_VALUE))                    .add(dati_webLayout.createSequentialGroup()                        .add(dati_webLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)                            .add(jLabel38, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 99, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)                            .add(jLabel34, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 99, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)                        .add(dati_webLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)                            .add(mod_vendita_web, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 729, Short.MAX_VALUE)                            .add(dati_webLayout.createSequentialGroup()                                .add(dati_webLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)                                    .add(org.jdesktop.layout.GroupLayout.LEADING, labStatusImgWeb, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)                                    .add(org.jdesktop.layout.GroupLayout.LEADING, labImmagine1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 240, Short.MAX_VALUE))                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)                                .add(jLabel40, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 112, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)                                .add(texMinimo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 130, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))))                .addContainerGap())        );        dati_webLayout.setVerticalGroup(            dati_webLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)            .add(dati_webLayout.createSequentialGroup()                .addContainerGap()                .add(dati_webLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)                    .add(jLabel28, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 17, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)                    .add(texCodiWeb, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)                    .add(jLabel30)                    .add(jLabel31)                    .add(c1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)                    .add(c2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)                    .add(c3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)                    .add(jLabel35)                    .add(jLabel36)                    .add(visibile_online, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)                    .add(c4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)                    .add(jLabel39)                    .add(jLabel37)                    .add(c5, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)                    .add(jButton4)                    .add(c1db, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)                    .add(c2db, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)                    .add(c3db, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)                    .add(c4db, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)                    .add(c5db, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)                .add(dati_webLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)                    .add(jLabel29)                    .add(web_descrizione_lang, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 94, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)                .add(dati_webLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)                    .add(colore_web, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)                    .add(jLabel32))                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)                .add(dati_webLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)                    .add(dimensioni_web, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)                    .add(jLabel33))                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)                .add(dati_webLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)                    .add(mod_vendita_web, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)                    .add(jLabel34))                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)                .add(dati_webLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)                    .add(dati_webLayout.createSequentialGroup()                        .add(dati_webLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)                            .add(jLabel38, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)                            .add(labImmagine1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 198, Short.MAX_VALUE))                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)                        .add(labStatusImgWeb, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))                    .add(dati_webLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)                        .add(jLabel40)                        .add(texMinimo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))                .addContainerGap(30, Short.MAX_VALUE))        );        panel_dati_web.add(dati_web, java.awt.BorderLayout.CENTER);        tabCent.addTab("Dati sito web", panel_dati_web);        panElen.setName("elenco"); // NOI18N        panElen.setLayout(new java.awt.BorderLayout());        griglia.setModel(new javax.swing.table.DefaultTableModel(            new Object [][] {                {null, null, null, null},                {null, null, null, null},                {null, null, null, null},                {null, null, null, null}            },            new String [] {                "Title 1", "Title 2", "Title 3", "Title 4"            }        ));        jScrollPane1.setViewportView(griglia);        panElen.add(jScrollPane1, java.awt.BorderLayout.CENTER);        tabCent.addTab("Elenco", panElen);        getContentPane().add(tabCent, java.awt.BorderLayout.CENTER);        butUndo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/icons/tango-icon-theme-080/16x16/actions/edit-undo.png"))); // NOI18N        butUndo.setText("Annulla");        butUndo.addActionListener(new java.awt.event.ActionListener() {            public void actionPerformed(java.awt.event.ActionEvent evt) {                butUndoActionPerformed(evt);            }        });        jPanel1.add(butUndo);        butSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/icons/tango-icon-theme-080/16x16/devices/media-floppy.png"))); // NOI18N        butSave.setText("Salva");        butSave.addActionListener(new java.awt.event.ActionListener() {            public void actionPerformed(java.awt.event.ActionEvent evt) {                butSaveActionPerformed(evt);            }        });        jPanel1.add(butSave);        getContentPane().add(jPanel1, java.awt.BorderLayout.SOUTH);        pack();    }// </editor-fold>//GEN-END:initComponents    private void butStampaElencoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butStampaElencoActionPerformed        JDialogStampaArticoli dialog = new JDialogStampaArticoli(main.getPadre(), true);        dialog.setGriglia(griglia);        dialog.setLocationRelativeTo(null);        dialog.setVisible(true);    }//GEN-LAST:event_butStampaElencoActionPerformed    private void butLastActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butLastActionPerformed        // Add your handling code here:        this.griglia.dbGoLast();        showListino();    }//GEN-LAST:event_butLastActionPerformed    private void butPrevActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butPrevActionPerformed        // Add your handling code here:        this.griglia.dbGoPrevious();        showListino();    }//GEN-LAST:event_butPrevActionPerformed    private void butFirsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butFirsActionPerformed        // Add your handling code here:        this.griglia.dbGoFirst();        showListino();    }//GEN-LAST:event_butFirsActionPerformed    private void butNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butNextActionPerformed        this.griglia.dbGoNext();        showListino();    }//GEN-LAST:event_butNextActionPerformed    private void formInternalFrameClosing(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameClosing        //elimino i records temporani        String sql = "delete from articoli_prezzi";        sql += " where articolo = '' or articolo is null";        Db.executeSql(sql);        main.getPadre().closeFrame(this);    }//GEN-LAST:event_formInternalFrameClosing    private void butDeleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butDeleActionPerformed        int ret = JOptionPane.showConfirmDialog(this, "Sicuro di eliminare ?", "Attenzione", JOptionPane.YES_NO_OPTION);        if (ret == JOptionPane.YES_OPTION) {            SwingUtils.mouse_wait(this);            final int[] rows = griglia.getSelectedRows();            Thread t = new Thread() {                @Override                public void run() {                    for (int i = rows.length - 1; i >= 0; i--) {                        final int final_i = i;                        griglia.getSelectionModel().setSelectionInterval(rows[final_i], rows[final_i]);                        griglia.dbSelezionaRiga();                        System.out.println("sel:" + rows[final_i]);                        //elimino i prezzi collegati all'articolo                        String codiceArticolo = (String) dati.dbGetField("codice");                        String sql = "";                        sql = "delete from articoli_prezzi";                        sql += " where articolo = " + Db.pc(codiceArticolo, java.sql.Types.VARCHAR);                        Db.executeSql(sql);                        dati.dbDelete();                    }                    griglia.dbRefresh();                    griglia.dbSelezionaRiga();                    SwingUtils.mouse_def(frmArtiConListinoPerle.this);                }            };            t.start();        }    }//GEN-LAST:event_butDeleActionPerformed    private void butFindActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butFindActionPerformed        boolean ret = this.griglia.dbFindNext();        if (ret == false) {            int ret2 = JOptionPane.showConfirmDialog(this, "Posizione non trovata\nVuoi riprovare dall'inizio ?", "Attenzione", JOptionPane.YES_NO_OPTION);            //JOptionPane.showMessageDialog(this,"?-:"+String.valueOf(i));            if (ret2 == JOptionPane.OK_OPTION) {                boolean ret3 = this.griglia.dbFindFirst();            }        }    }//GEN-LAST:event_butFindActionPerformed    private void butUndoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butUndoActionPerformed        dati.dbUndo();    }//GEN-LAST:event_butUndoActionPerformed    private void butSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butSaveActionPerformed        this.tabListino.editingStopped(new javax.swing.event.ChangeEvent(tabListino));        if (texCodi.getText().trim().length() == 0) {            JOptionPane.showMessageDialog(this, "Inserire il codice articolo", "Attenzione", JOptionPane.INFORMATION_MESSAGE);            return;        }        this.dati.dbSave();//        this.griglia.dbRefresh();        //azzero immagine eventuale..        if (dati.getCampiAggiuntivi() != null) {            dati.getCampiAggiuntivi().put("immagine1", "null");        }        main.events.fireInvoicexEvent(new InvoicexEvent(this, InvoicexEvent.TYPE_SAVE));    }//GEN-LAST:event_butSaveActionPerformed    private void butNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butNewActionPerformed        this.dati.dbNew();//        String siva = main.fileIni.getValue("iva", "codiceIvaDefault");        String siva = InvoicexUtil.getIvaDefaultPassaggio();        iva.dbTrovaKey(siva);        rbtEnt.setSelected(true);        visibile_online.setSelected(true);        if (tabCent.getSelectedIndex() == 2) {            tabCent.setSelectedIndex(0);        }        refreshImmagine(null);    }//GEN-LAST:event_butNewActionPerformedprivate void butNew1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butNew1ActionPerformed    String oldCod = texCodi.getText();    Object input = JOptionPane.showInputDialog(this, "Nuovo codice articolo", texCodi.getText());    System.out.println("input:" + input);    if (input != null) {        if (input.toString().equalsIgnoreCase(oldCod)) {            JOptionPane.showMessageDialog(this, "Non puoi reinserire lo stesso codice articolo", "Attenzione", JOptionPane.INFORMATION_MESSAGE);            butNew1ActionPerformed(null);        } else {            System.out.println("duplicazione " + oldCod + " su " + input);            //duplico            String sql = "insert into articoli ("                    + "codice,descrizione,prezzo1,prezzo2,um,iva,pezzi,descrizione_en,um_en,flag_confezione,gestione_matricola,genera_garanzia,peso_kg"                    + ") select "                    + "" + Db.pc(input.toString(), Types.VARCHAR) + " as nuovoCodice, descrizione,prezzo1,prezzo2,um,iva,pezzi,descrizione_en,um_en,flag_confezione,gestione_matricola,genera_garanzia,peso_kg from articoli where codice = " + Db.pc(oldCod, Types.VARCHAR);            Db.executeSql(sql);            sql = "insert into articoli_prezzi ("                    + "articolo, listino, prezzo"                    + ") select "                    + "" + Db.pc(input.toString(), Types.VARCHAR) + " as nuovoCodice, listino, prezzo from articoli_prezzi where articolo = " + Db.pc(oldCod, Types.VARCHAR);            Db.executeSql(sql);            griglia.dbRefresh();            dati.ultimoCampo = "codice";            dati.ultimoValore = input.toString();            //texCodi.setText(input.toString());            griglia.dbGoFirst();            griglia.dbFindNext();        }    }}//GEN-LAST:event_butNew1ActionPerformedprivate void rbtAcqActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtAcqActionPerformed    this.texTipo.setText("A");}//GEN-LAST:event_rbtAcqActionPerformedprivate void rbtVenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtVenActionPerformed    this.texTipo.setText("V");}//GEN-LAST:event_rbtVenActionPerformedprivate void rbtEntActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtEntActionPerformed    this.texTipo.setText("E");}//GEN-LAST:event_rbtEntActionPerformedprivate void ivaPopupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_ivaPopupMenuWillBecomeVisible    JComboBox box = (JComboBox) evt.getSource();    Object comp = box.getUI().getAccessibleChild(box, 0);    if (!(comp instanceof JPopupMenu)) {        return;    }    JComponent scrollPane = (JComponent) ((JPopupMenu) comp).getComponent(0);    Dimension size = new Dimension();    size.width = box.getPreferredSize().width;    size.height = scrollPane.getPreferredSize().height;    scrollPane.setPreferredSize(size);    //  following line for Tiger    scrollPane.setMaximumSize(size);}//GEN-LAST:event_ivaPopupMenuWillBecomeVisibleprivate void tnxCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tnxCheckBox1ActionPerformed    // TODO add your handling code here:}//GEN-LAST:event_tnxCheckBox1ActionPerformedprivate void cheConfezioneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cheConfezioneActionPerformed    cheFlagConfezione.setSelected(cheConfezione.isSelected());    this.dati.dbCheckModificati();}//GEN-LAST:event_cheConfezioneActionPerformedprivate void cheKitItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cheKitItemStateChanged    btnGestKit.setEnabled(false);    if (cheKit.isSelected()) {        btnGestKit.setEnabled(true);        texUm.setText("N");        texUm1.setText("N");        texUm.setEnabled(false);        texUm1.setEnabled(false);    } else {        texUm.setEnabled(true);        texUm1.setEnabled(true);    }}//GEN-LAST:event_cheKitItemStateChangedprivate void btnGestKitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGestKitActionPerformed    setCursor(new Cursor(Cursor.WAIT_CURSOR));    if (dati.dbStato.equals(tnxDbPanel.DB_INSERIMENTO) || dati.dbStato.equals(tnxDbPanel.DB_MODIFICA)) {        int res = JOptionPane.showConfirmDialog(this, "Devi salvare il KIT prima di gestire gli articoli.\nSalvare adesso?", "Salvataggio Dati", JOptionPane.YES_NO_OPTION);        if (res == JOptionPane.YES_OPTION) {            this.butSaveActionPerformed(null);        } else {            return;        }    }    frmArtiComposti frm = new frmArtiComposti(this.texCodi.getText());    main.getPadre().openFrame(frm, 620, 400);    setCursor(new Cursor(Cursor.DEFAULT_CURSOR));}//GEN-LAST:event_btnGestKitActionPerformedprivate void texSearchKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_texSearchKeyPressed}//GEN-LAST:event_texSearchKeyPressedprivate void texSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_texSearchKeyReleased    SwingUtils.mouse_wait();    String sql = "select ";    sql += " codice, ";    sql += " descrizione, ";    sql += " um , ";    if (main.getPersonalContain(main.PERSONAL_CHIANTICASHMERE)) {        sql += " descrizione_en, ";        sql += " um_en , ";    }    sql += " iva, ";    sql += " tipo ";    sql += " from articoli";    sql += " where descrizione like " + Db.pc("%" + texSearch.getText() + "%", Types.VARCHAR) + " or codice like " + Db.pc("%" + texSearch.getText() + "%", Types.VARCHAR);    sql += " order by codice";    griglia.dbOpen(Db.getConn(), sql, Db.INSTANCE, true);//    griglia.dbOpen(Db.getConn(), sql);    griglia.dbPanel = dati;    tabCent.setSelectedIndex(2);    SwingUtils.mouse_def();}//GEN-LAST:event_texSearchKeyReleasedprivate void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed    SwingUtils.mouse_wait();    texSearch.setText("");    String sql = "select ";    sql += " codice, ";    sql += " descrizione, ";    sql += " um , ";    if (main.getPersonalContain(main.PERSONAL_CHIANTICASHMERE)) {        sql += " descrizione_en, ";        sql += " um_en , ";    }    sql += " iva, ";    sql += " tipo ";    sql += " from articoli";    sql += " order by codice";    griglia.dbOpen(Db.getConn(), sql, Db.INSTANCE, true);    griglia.dbPanel = dati;    tabCent.setSelectedIndex(2);    SwingUtils.mouse_def();}//GEN-LAST:event_jButton3ActionPerformedprivate void texSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_texSearchActionPerformed    // TODO add your handling code here:}//GEN-LAST:event_texSearchActionPerformedprivate void menScegliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menScegliActionPerformed    if (dati.dbStato.equals(tnxDbPanel.DB_INSERIMENTO)) {        SwingUtils.showInfoMessage(this, "Prima di scegliere l'immagine salvare l'articolo");        return;    }    JFileChooser fileChoose = new JFileChooser();    FileFilter filter1 = new FileFilter() {        public boolean accept(File pathname) {            if (pathname.getAbsolutePath().toLowerCase().endsWith(".jpg")                    || pathname.getAbsolutePath().toLowerCase().endsWith(".jpeg")                    || pathname.getAbsolutePath().toLowerCase().endsWith(".gif")                    || pathname.getAbsolutePath().toLowerCase().endsWith(".bmp")                    || pathname.getAbsolutePath().toLowerCase().endsWith(".png")                    || pathname.isDirectory()) {                return true;            } else {                return false;            }        }        public String getDescription() {            return "File Immagine (*.jpg, *.jpeg, *.gif, *.png, *.bmp)";        }    };    fileChoose.addChoosableFileFilter(filter1);    ImagePreviewPanel preview = new ImagePreviewPanel();    fileChoose.setAccessory(preview);    fileChoose.addPropertyChangeListener(preview);    String path = main.prefs.get("articoli_path_chooser_immagine", null);    if (path != null) {        fileChoose.setCurrentDirectory(new File(path));    }    int ret = fileChoose.showOpenDialog(this);    if (ret == javax.swing.JFileChooser.APPROVE_OPTION) {        //apro il file        String file = fileChoose.getSelectedFile().getAbsolutePath();        if (dati.getCampiAggiuntivi() == null) {            dati.setCampiAggiuntivi(new Hashtable());        }        file = StringUtils.replace(file, "\\", "\\\\");        dati.getCampiAggiuntivi().put("immagine1", Db.pc(file, Types.VARCHAR));        dati.dbForzaModificati();        refreshImmagine(file);        butSaveActionPerformed(null);        //uploadoimmagine        uploadImmagine(file);    }    //memorizzo path    main.prefs.put("articoli_path_chooser_immagine", fileChoose.getCurrentDirectory().getAbsolutePath());}//GEN-LAST:event_menScegliActionPerformedprivate void labImmagineMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_labImmagineMouseClicked    if (evt.getClickCount() >= 2) {        menScegliActionPerformed(null);    }    if (SwingUtilities.isRightMouseButton(evt)) {        popupImmagine.show(labImmagine, evt.getX(), evt.getY());    }}//GEN-LAST:event_labImmagineMouseClickedprivate void menEliminaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menEliminaActionPerformed    labImmagine.setText("Nessuna immagine");    labImmagine.setIcon(null);    labImmagine1.setText("Nessuna immagine");    labImmagine1.setIcon(null);    if (dati.getCampiAggiuntivi() == null) {        dati.setCampiAggiuntivi(new Hashtable());    }    dati.getCampiAggiuntivi().put("immagine1", "null");    dati.dbForzaModificati();}//GEN-LAST:event_menEliminaActionPerformedprivate void butImportExcelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butImportExcelActionPerformed    frmImportArtiExcel frm = new frmImportArtiExcel(this);    frm.pack();    main.getPadre().openFrame(frm, frm.getWidth(), frm.getHeight());}//GEN-LAST:event_butImportExcelActionPerformedprivate void cheGestioneMatricoleItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cheGestioneMatricoleItemStateChanged//    if (evt.getStateChange() == ItemEvent.SELECTED) {//        cheGestioneLotti.setSelected(false);//    }}//GEN-LAST:event_cheGestioneMatricoleItemStateChangedprivate void cheGestioneLottiItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cheGestioneLottiItemStateChanged//    if (evt.getStateChange() == ItemEvent.SELECTED) {//        cheGestioneMatricole.setSelected(false);//    }}//GEN-LAST:event_cheGestioneLottiItemStateChangedprivate void c1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_c1ActionPerformed    selezionaCategoria(1, c1);}//GEN-LAST:event_c1ActionPerformedprivate void c2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_c2ActionPerformed    selezionaCategoria(2, c2);}//GEN-LAST:event_c2ActionPerformedprivate void c3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_c3ActionPerformed    selezionaCategoria(3, c3);}//GEN-LAST:event_c3ActionPerformedprivate void c4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_c4ActionPerformed    selezionaCategoria(4, c4);}//GEN-LAST:event_c4ActionPerformedprivate void c5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_c5ActionPerformed    selezionaCategoria(5, c5);}//GEN-LAST:event_c5ActionPerformedprivate void texCodiWebFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_texCodiWebFocusLost    texCodi.setText(texCodiWeb.getText());}//GEN-LAST:event_texCodiWebFocusLostprivate void texCodiFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_texCodiFocusLost    texCodiWeb.setText(texCodi.getText());}//GEN-LAST:event_texCodiFocusLostprivate void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed    JInternalFrame frame = new JInternalFrame("Gestione Categorie", true, true, true, true);    JPanelCategorie cat = new JPanelCategorie();    cat.init(false);    frame.getContentPane().add(cat);    frame.pack();    main.getPadre().openFrame(frame, 500, 500);}//GEN-LAST:event_jButton4ActionPerformedprivate void labImmagine1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_labImmagine1MouseClicked    if (evt.getClickCount() >= 2) {        menScegliActionPerformed(null);    }    if (SwingUtilities.isRightMouseButton(evt)) {        popupImmagine.show(labImmagine1, evt.getX(), evt.getY());    }}//GEN-LAST:event_labImmagine1MouseClickedprivate void c1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_c1MouseClicked    if (SwingUtilities.isRightMouseButton(evt)) {        popupCat.show(c1, evt.getX(), evt.getY());    }}//GEN-LAST:event_c1MouseClickedprivate void c1MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_c1MouseReleased}//GEN-LAST:event_c1MouseReleasedprivate void menEliminaCatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menEliminaCatActionPerformed    eliminaCategoria((JXHyperlink) ((JPopupMenu) ((JMenuItem) evt.getSource()).getParent()).getInvoker());}//GEN-LAST:event_menEliminaCatActionPerformedprivate void c2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_c2MouseClicked    if (SwingUtilities.isRightMouseButton(evt)) {        popupCat.show(c2, evt.getX(), evt.getY());    }}//GEN-LAST:event_c2MouseClickedprivate void c3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_c3MouseClicked    if (SwingUtilities.isRightMouseButton(evt)) {        popupCat.show(c3, evt.getX(), evt.getY());    }}//GEN-LAST:event_c3MouseClickedprivate void c4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_c4MouseClicked    if (SwingUtilities.isRightMouseButton(evt)) {        popupCat.show(c4, evt.getX(), evt.getY());    }}//GEN-LAST:event_c4MouseClickedprivate void c5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_c5MouseClicked    if (SwingUtilities.isRightMouseButton(evt)) {        popupCat.show(c5, evt.getX(), evt.getY());    }}//GEN-LAST:event_c5MouseClickedprivate void visibile_onlineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_visibile_onlineActionPerformed    // TODO add your handling code here:}//GEN-LAST:event_visibile_onlineActionPerformedprivate void texDescrizioneFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_texDescrizioneFocusLost    web_descrizione_lang.setText("it", texDescrizione.getText());}//GEN-LAST:event_texDescrizioneFocusLostprivate void texDescrizioneEnFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_texDescrizioneEnFocusLost    web_descrizione_lang.setText("en", texDescrizioneEn.getText());}//GEN-LAST:event_texDescrizioneEnFocusLostprivate void web_descrizione_langFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_web_descrizione_langFocusLost    texDescrizione.setText(web_descrizione_lang.getText("it"));    texDescrizioneEn.setText(web_descrizione_lang.getText("en"));}//GEN-LAST:event_web_descrizione_langFocusLostprivate void texMinimoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_texMinimoFocusLost    // TODO add your handling code here:}//GEN-LAST:event_texMinimoFocusLost    // Variables declaration - do not modify//GEN-BEGIN:variables    private javax.swing.JButton btnGestKit;    private javax.swing.JButton butDele;    private javax.swing.JButton butFind;    private javax.swing.JButton butFirs;    private javax.swing.JButton butImportExcel;    private javax.swing.JButton butLast;    private javax.swing.JButton butNew;    private javax.swing.JButton butNew1;    private javax.swing.JButton butNext;    private javax.swing.JButton butPrev;    private javax.swing.JButton butSave;    private javax.swing.JButton butStampaElenco;    private javax.swing.JButton butUndo;    private org.jdesktop.swingx.JXHyperlink c1;    private tnxbeans.tnxTextField c1db;    private org.jdesktop.swingx.JXHyperlink c2;    private tnxbeans.tnxTextField c2db;    private org.jdesktop.swingx.JXHyperlink c3;    private tnxbeans.tnxTextField c3db;    private org.jdesktop.swingx.JXHyperlink c4;    private tnxbeans.tnxTextField c4db;    private org.jdesktop.swingx.JXHyperlink c5;    private tnxbeans.tnxTextField c5db;    private javax.swing.JCheckBox cheConfezione;    private tnxbeans.tnxCheckBox cheFlagConfezione;    private tnxbeans.tnxCheckBox cheGestioneLotti;    private tnxbeans.tnxCheckBox cheGestioneMatricole;    private tnxbeans.tnxCheckBox cheKit;    private tnxbeans.tnxTextFieldLang colore_web;    public tnxbeans.tnxDbPanel dati;    private tnxbeans.tnxDbPanel dati_web;    private tnxbeans.tnxTextFieldLang dimensioni_web;    public tnxbeans.tnxDbGrid griglia;    private javax.swing.ButtonGroup grpSel;    private tnxbeans.tnxComboField iva;    private javax.swing.JButton jButton3;    private javax.swing.JButton jButton4;    private javax.swing.JLabel jLabel1;    private javax.swing.JLabel jLabel10;    private javax.swing.JLabel jLabel11;    private javax.swing.JLabel jLabel12;    private javax.swing.JLabel jLabel13;    private javax.swing.JLabel jLabel131;    private javax.swing.JLabel jLabel132;    private javax.swing.JLabel jLabel14;    private javax.swing.JLabel jLabel2;    private javax.swing.JLabel jLabel21;    private javax.swing.JLabel jLabel22;    private javax.swing.JLabel jLabel231;    private javax.swing.JLabel jLabel24;    private javax.swing.JLabel jLabel25;    private javax.swing.JLabel jLabel26;    private javax.swing.JLabel jLabel28;    private javax.swing.JLabel jLabel29;    private javax.swing.JLabel jLabel3;    private javax.swing.JLabel jLabel30;    private javax.swing.JLabel jLabel31;    private javax.swing.JLabel jLabel32;    private javax.swing.JLabel jLabel33;    private javax.swing.JLabel jLabel34;    private javax.swing.JLabel jLabel35;    private javax.swing.JLabel jLabel36;    private javax.swing.JLabel jLabel37;    private javax.swing.JLabel jLabel38;    private javax.swing.JLabel jLabel39;    private javax.swing.JLabel jLabel4;    private javax.swing.JLabel jLabel40;    private javax.swing.JLabel jLabel5;    private javax.swing.JLabel jLabel6;    private javax.swing.JLabel jLabel7;    private javax.swing.JLabel jLabel8;    private javax.swing.JLabel jLabel9;    private javax.swing.JPanel jPanel1;    private javax.swing.JPanel jPanel2;    private javax.swing.JScrollPane jScrollPane1;    private javax.swing.JScrollPane jScrollPane2;    private javax.swing.JScrollPane jScrollPane3;    private javax.swing.JSeparator jSeparator1;    private javax.swing.JSeparator jSeparator2;    private javax.swing.JTabbedPane jTabbedPane1;    private javax.swing.JToolBar jToolBar1;    private javax.swing.JToolBar jToolBar3;    private javax.swing.JLabel labImmagine;    private javax.swing.JLabel labImmagine1;    public org.jdesktop.swingx.JXBusyLabel labStatusImg;    public org.jdesktop.swingx.JXBusyLabel labStatusImgWeb;    private javax.swing.JMenuItem menElimina;    private javax.swing.JMenuItem menEliminaCat;    private javax.swing.JMenuItem menScegli;    private tnxbeans.tnxTextFieldLang mod_vendita_web;    private tnxbeans.tnxCheckBox non_applicare_perc;    private javax.swing.JPanel panAlto;    private javax.swing.JPanel panConfezione;    private javax.swing.JPanel panDati;    private javax.swing.JPanel panElen;    private javax.swing.JPanel panel_dati_web;    private javax.swing.JPopupMenu popupCat;    private javax.swing.JPopupMenu popupImmagine;    private javax.swing.JRadioButton rbtAcq;    private javax.swing.JRadioButton rbtEnt;    private javax.swing.JRadioButton rbtVen;    private javax.swing.JTabbedPane tabCent;    private javax.swing.JTable tabConfezione;    private javax.swing.JTable tabListino;    private tnxbeans.tnxTextField texCodi;    private tnxbeans.tnxTextField texCodiWeb;    private tnxbeans.tnxMemoField texDescrizione;    private tnxbeans.tnxMemoField texDescrizioneEn;    private tnxbeans.tnxTextField texMinimo;    private javax.swing.JTextField texSearch;    private tnxbeans.tnxTextField texTipo;    private tnxbeans.tnxTextField texUm;    private tnxbeans.tnxTextField texUm1;    private tnxbeans.tnxTextField texUm2;    private tnxbeans.tnxTextField texUm3;    private tnxbeans.tnxTextField texUm4;    private tnxbeans.tnxTextField texUm5;    private tnxbeans.tnxCheckBox tnxCheckBox1;    private tnxbeans.tnxCheckBox visibile_online;    private tnxbeans.tnxMemoFieldLang web_descrizione_lang;    // End of variables declaration//GEN-END:variables    private void selezionaCategoria(int i, JXHyperlink c) {        final JDialog dialog = new JDialog(main.getPadreFrame(), "Selezione della categoria", true);        JPanelCategorie pcat = new JPanelCategorie() {            @Override            public void dispose() {                dialog.dispose();            }        };        pcat.init(true);        dialog.getContentPane().add(pcat);        dialog.pack();        dialog.setLocationRelativeTo(this);        dialog.setVisible(true);        if (pcat.categoria_selezionata != null) {            Map m = pcat.categoria_selezionata;            Object id = m.get("id");            c.setText(m.get("nome") + " [" + id + "]");            try {                BufferedImage buffimg = ImageIO.read(new File((String)m.get("immagine1")));                buffimg = ImgUtils.resizeQuality(buffimg, ImgUtils.getDimension(buffimg.getWidth(), buffimg.getHeight(), 48, 24));                c.setIcon(new ImageIcon(buffimg));            } catch (Exception e) {                e.printStackTrace();            }            if (i == 1) {                c1db.setText(ObjectUtils.toString(id));            } else if (i == 2) {                c2db.setText(ObjectUtils.toString(id));            } else if (i == 3) {                c3db.setText(ObjectUtils.toString(id));            } else if (i == 4) {                c4db.setText(ObjectUtils.toString(id));            } else if (i == 5) {                c5db.setText(ObjectUtils.toString(id));            }            dati.dbForzaModificati();        }    }    private void caricaCat(int i, JXHyperlink c, tnxTextField cdb) {        c.setText("...");        c.setIcon(null);        try {            String sql = "select * from categorie where id = " + cdb.getText();            List list = DbUtils.getListMap(Db.getConn(), sql);            Map m = (Map) list.get(0);            Object id = m.get("id");            c.setText(m.get("nome") + " [" + id + "]");            try {//                File f = new File((String)m.get("immagine1"));//                if (f.exists()) {//                    BufferedImage buffimg = ImageIO.read(new File((String)m.get("immagine1")));//                    buffimg = ImgUtils.resizeQuality(buffimg, ImgUtils.getDimension(buffimg.getWidth(), buffimg.getHeight(), 48, 24));//                    c.setIcon(new ImageIcon(buffimg));//                } else {//                    System.out.println("caricaCat: file '" + f.getAbsolutePath() + "' non esiste");//                    c.setIcon(null);//                }                String nomefile_orig = (String)m.get("immagine1");                String nomefile = StringUtils.substringAfterLast(nomefile_orig, "\\");                String url = "http://www.perlegitane.it/_pics/categorie/" + StringUtils.replace(nomefile, " ", "%20");                System.out.println("caricatCat" + i + ": nomefile_orig:" + nomefile_orig + " / nomeFile:" + nomefile + " / url:" + url);                File ftemp = new File("tempCat_" + i + ".jpg");                HttpUtils.saveFile(url, ftemp.getAbsolutePath());                BufferedImage buffimg = ImageIO.read(ftemp);                buffimg = ImgUtils.resizeQuality(buffimg, ImgUtils.getDimension(buffimg.getWidth(), buffimg.getHeight(), 48, 24));                c.setIcon(new ImageIcon(buffimg));            } catch (Exception e) {                e.printStackTrace();            }        } catch (Exception e) {        }    }    private void eliminaCategoria(JXHyperlink c) {        c.setText("...");        c.setIcon(null);        Integer i = CastUtils.toInteger0(c.getName());        if (i == 1) {            c1db.setText("");        } else if (i == 2) {            c2db.setText("");        } else if (i == 3) {            c3db.setText("");        } else if (i == 4) {            c4db.setText("");        } else if (i == 5) {            c5db.setText("");        } else {            System.err.println("categoria non trovata");        }        dati.dbForzaModificati();    }    private void uploadImmagine(final String file) {        labStatusImg.setVisible(true);        labStatusImg.setText("upload in corso...");        labStatusImgWeb.setVisible(true);        labStatusImgWeb.setText("upload in corso...");        SwingWorker worker = new SwingWorker() {            @Override            protected Object doInBackground() throws Exception {                try {                    //controllo se Ã¨ stata giÃ  uploadata                    String sql = "select codice, immagine1, immagine1_web from articoli where immagine1 = '" + file + "' limit 1";                    List<Map> imgdb = DbUtils.getListMap(Db.getConn(), sql);                    DebugUtils.dump(imgdb);                    boolean esiste = false;                    if (imgdb.size() > 0) {                        esiste = true;                    }                    //controllo dimensioni                    File fupload = null;                    BufferedImage image = ImageIO.read(new File(file));                    File temp = null;                    if (image.getWidth() > 1400 || image.getHeight() > 1200) {                        //rimpicciolisco                        try {                            temp = new File(main.wd + "temp_img_articoli_upload/" + new File(file).getName());                            temp.getParentFile().mkdirs();                            temp.delete();                            image = ImgUtils.resizeQuality(image, ImgUtils.getDimension(image.getWidth(), image.getHeight(), 1400, 1200));                            ImgUtils.writeJpeg(image, temp.getAbsolutePath(), 0.9f);                            fupload = temp;                        } catch (Exception e) {                            e.printStackTrace();                            SwingUtils.showExceptionMessage(main.getPadreFrame(), e);                        }                    } else {                        fupload = new File(file);                    }                    HttpClient httpclient = new HttpClient();//                    PostMethod post = new PostMethod("http://indi.tnx.dyndns.org/perle_gitane/invoicex.php");                    PostMethod post = new PostMethod("http://www.perlegitane.it/invoicex.php");                    File f = new File(file);                    Part[] parts = {                        new StringPart("upload_img", "1"),                        new StringPart("articolo", texCodi.getText()),                        new StringPart("esiste", esiste ? "S" : "N"),                        new StringPart("esiste_codice", (String) (esiste ? imgdb.get(0).get("codice") : "")),                        new StringPart("esiste_immagine1", (String) (esiste ? imgdb.get(0).get("immagine1") : "")),                        new StringPart("esiste_immagine1_web", (String) (esiste ? imgdb.get(0).get("immagine1_web") : "")),                        new FilePart(f.getName(), fupload)                    };                    post.setRequestEntity(new MultipartRequestEntity(parts, post.getParams()));                    int ret = httpclient.executeMethod(post);                    System.out.println("ret = " + ret);                    String resp = post.getResponseBodyAsString();                    System.out.println("resp = " + resp);                    post.releaseConnection();                    if (temp != null) {                        temp.delete();                    }                } catch (Exception e) {                    e.printStackTrace();                }                return null;            }            @Override            protected void done() {                labStatusImg.setVisible(false);                labStatusImgWeb.setVisible(false);            }        };        worker.execute();    }    private void refreshImmagine() {        refreshImmagine(null);    }    synchronized public void refreshImmagine(final String file) {        final int w = labImmagine.getWidth();        final int h = labImmagine.getHeight();        conta_i++;        final int i = conta_i;        if (w > 0 && h > 0) {            Thread t = new Thread("refresh immagine") {                @Override                public void run() {                    try {                        String immagine = null;                        String immagine_web = null;//                        try {//                            immagine = StringUtils.replace(StringUtils.remove((String) dati.getCampiAggiuntivi().get("immagine1"), "'"), "\\\\", "\\");//                        } catch (Exception e) {//                        }//                        if (immagine == null || immagine.length() == 0) {//                            if (!dati.dbStato.equals(tnxDbPanel.DB_INSERIMENTO)) {//                                try {//                                    immagine = CastUtils.toString(dati.dbGetFieldOnlyNotClosed("immagine1"));//                                } catch (Exception e) {//                                }//                            }//                        }                        if (dati.dbStato.equals(tnxDbPanel.DB_INSERIMENTO)) {                            SwingUtils.inEdt(new Runnable() {                                public void run() {                                    labImmagine.setBorder(javax.swing.BorderFactory.createLineBorder(javax.swing.UIManager.getDefaults().getColor("Button.shadow")));                                    labImmagine.setIcon(null);                                    labImmagine.setText("Nessuna immagine");                                    labImmagine1.setBorder(javax.swing.BorderFactory.createLineBorder(javax.swing.UIManager.getDefaults().getColor("Button.shadow")));                                    labImmagine1.setIcon(null);                                    labImmagine1.setText("Nessuna immagine");                                }                            });                            return;                        } else if (file != null) {                            immagine = file;                        } else {                            try {                                immagine_web = CastUtils.toString(dati.dbGetFieldOnlyNotClosed("immagine1_web"));                                immagine_web = StringUtils.replace(immagine_web, " ", "%20");                                if (StringUtils.isNotEmpty(immagine_web)) {                                    System.err.println("dati.dbStato: " + dati.dbStato + " / immagine: " + immagine +  " / immagineweb: " + immagine_web);                                    File f = new File("tempImg.jpg");                                    HttpUtils.saveFile("http://www.perlegitane.it/" + immagine_web, f.getAbsolutePath());                                    immagine = f.getAbsolutePath();                                } else {                                    immagine = null;                                }                            } catch (Exception e) {                                e.printStackTrace();                            }                        }                                                if (StringUtils.isEmpty(immagine)) {                            SwingUtils.inEdt(new Runnable() {                                public void run() {                                    labImmagine.setBorder(javax.swing.BorderFactory.createLineBorder(javax.swing.UIManager.getDefaults().getColor("Button.shadow")));                                    labImmagine.setIcon(null);                                    labImmagine.setText("Nessuna immagine");                                    labImmagine1.setBorder(javax.swing.BorderFactory.createLineBorder(javax.swing.UIManager.getDefaults().getColor("Button.shadow")));                                    labImmagine1.setIcon(null);                                    labImmagine1.setText("Nessuna immagine");                                }                            });                        } else {                            //ridimensiono                            SwingUtils.inEdtWait(new Runnable() {                                public void run() {                                    labImmagine.setBorder(null);                                    labImmagine.setIcon(null);                                    labImmagine.setText("... caricamento ...");                                    labImmagine1.setBorder(null);                                    labImmagine1.setIcon(null);                                    labImmagine1.setText("... caricamento ...");                                }                            });                            System.out.println("refresh immagine " + i + " > i r mem 1");                            DebugUtils.dumpMem();                            try {                                image = ImgUtils.getImage(immagine, w, 0, "Q", false, 0.85d, main.cache_img);                                System.out.println("refresh immagine " + i + " > i r mem 2");                                image = ImgUtils.applyFrame3(image, labImmagine.getBackground());                                System.out.println("refresh immagine " + i + " > i r mem 3");                                DebugUtils.dumpMem();                            } catch (OutOfMemoryError e) {                                image = null;                                System.out.println("refresh immagine " + i + " > i r mem errore");                                DebugUtils.dumpMem();                                e.printStackTrace();                                SwingUtils.showErrorMessage(main.getPadreFrame(), "Errore nell'elaborazione dell'immagine, memoria esaurita");                            } catch (Throwable t) {                                image = null;                                t.printStackTrace();                            }                            SwingUtils.inEdt(new Runnable() {                                public void run() {                                    labImmagine.setText("");                                    labImmagine.setIcon(new ImageIcon(image));                                    labImmagine1.setText("");                                    labImmagine1.setIcon(new ImageIcon(image));                                }                            });                        }                    } catch (Exception e) {                        e.printStackTrace();                        SwingUtils.inEdt(new Runnable() {                            public void run() {                                labImmagine.setBorder(javax.swing.BorderFactory.createLineBorder(javax.swing.UIManager.getDefaults().getColor("Button.shadow")));                                labImmagine.setIcon(null);                                labImmagine.setText("Nessuna immagine");                                labImmagine1.setBorder(javax.swing.BorderFactory.createLineBorder(javax.swing.UIManager.getDefaults().getColor("Button.shadow")));                                labImmagine1.setIcon(null);                                labImmagine1.setText("Nessuna immagine");                            }                        });                    }                }            };            t.start();        }        //aggiorno anche le categorie        caricaCat(1, c1, c1db);        caricaCat(2, c2, c2db);        caricaCat(3, c3, c3db);        caricaCat(4, c4, c4db);        caricaCat(5, c5, c5db);    }}