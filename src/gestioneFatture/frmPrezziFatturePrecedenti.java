/**
 * Invoicex
 * Copyright (c) 2005,2006,2007 Marco Ceccarelli, Tnx snc
 *
 * Questo software Ã¨ soggetto, e deve essere distribuito con la licenza  
 * GNU General Public License, Version 2. La licenza accompagna il software
 * o potete trovarne una copia alla Free Software Foundation http://www.fsf.org .
 *
 * This software is subject to, and may be distributed under, the
 * GNU General Public License, Version 2. The license should have
 * accompanied the software or you may obtain a copy of the license
 * from the Free Software Foundation at http://www.fsf.org .
 * 
 * --
 * Marco Ceccarelli (m.ceccarelli@tnx.it)
 * Tnx snc (http://www.tnx.it)
 *
 */



package gestioneFatture;

import it.tnx.Db;

public class frmPrezziFatturePrecedenti
    extends javax.swing.JInternalFrame {

    public frmPrezziFatturePrecedenti(int codiceCliente, String codiceArticolo) {
        this(codiceCliente, codiceArticolo, Db.TIPO_DOCUMENTO_FATTURA);
    }
    
    public frmPrezziFatturePrecedenti(int codiceCliente, String codiceArticolo, String tipo) {
        initComponents();

        String sql = "select " + (tipo.equals(Db.TIPO_DOCUMENTO_FATTURA_RICEVUTA) ? "t.fornitore" : "t.cliente") + ", t.data, r.codice_articolo, r.descrizione, r.um, r.quantita, r.prezzo,"
                + " r.sconto1, r.sconto2 "
                + getFrom(tipo)
                + " where " + (tipo.equals(Db.TIPO_DOCUMENTO_FATTURA_RICEVUTA) ? "t.fornitore" : "t.cliente") + " = " + codiceCliente;
                //+ " and t.anno >= " + (main.anno - 1);

        if (codiceArticolo != null) {
            sql += " and r.codice_articolo = " + Db.pc(codiceArticolo, java.sql.Types.VARCHAR);
        }

        sql += " order by r.codice_articolo, t.data desc";

        //debug
        System.out.println("sql prezzi fatture precedenti:" + sql);

        java.util.Hashtable colsWidthPerc = new java.util.Hashtable();
        if (tipo.equals(Db.TIPO_DOCUMENTO_FATTURA_RICEVUTA)) {
            colsWidthPerc.put("fornitore", new Double(0));
        } else {
            colsWidthPerc.put("cliente", new Double(0));
        }
        colsWidthPerc.put("data", new Double(10));
        colsWidthPerc.put("codice_articolo", new Double(15));
        colsWidthPerc.put("descrizione", new Double(35));
        colsWidthPerc.put("um", new Double(5));
        colsWidthPerc.put("quantita", new Double(8));
        colsWidthPerc.put("prezzo", new Double(13));
        colsWidthPerc.put("sconto1", new Double(5));
        colsWidthPerc.put("sconto2", new Double(5));
        this.griglia.columnsSizePerc = colsWidthPerc;

        //this.griglia.flagUsaOrdinamento = false;
        this.griglia.dbOpen(Db.getConn(), sql);
    }

    /** This method is called from within the constructor to

   * initialize the form.

   * WARNING: Do NOT modify this code. The content of this method is

   * always regenerated by the Form Editor.

   */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        griglia = new tnxbeans.tnxDbGrid();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Prezzi precedenti");

        jScrollPane1.setFont(new java.awt.Font("Dialog", 0, 10));

        griglia.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        griglia.setFont(new java.awt.Font("Arial Narrow", 0, 11));
        jScrollPane1.setViewportView(griglia);

        getContentPane().add(jScrollPane1, java.awt.BorderLayout.CENTER);
        getContentPane().add(jPanel1, java.awt.BorderLayout.NORTH);
        getContentPane().add(jPanel2, java.awt.BorderLayout.SOUTH);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private tnxbeans.tnxDbGrid griglia;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables

    private String getFrom(String tipo) {
        if (tipo.equals(Db.TIPO_DOCUMENTO_FATTURA)) {
            return " from test_fatt t left join righ_fatt r on r.id_padre = t.id ";
        } else if (tipo.equals(Db.TIPO_DOCUMENTO_DDT)) {
            return " from test_ddt t left join righ_ddt r on r.id_padre = t.id ";
        } else if (tipo.equals(Db.TIPO_DOCUMENTO_ORDINE)) {
            return " from test_ordi t left join righ_ordi r on r.id_padre = t.id ";
        } else if (tipo.equals(Db.TIPO_DOCUMENTO_ORDINE_ACQUISTO)) {
            return " from test_ordi_acquisto t left join righ_ordi_acquisto r on r.id_padre = t.id ";
        } else if (tipo.equals(Db.TIPO_DOCUMENTO_FATTURA_RICEVUTA)) {
            return " from test_fatt_acquisto t left join righ_fatt_acquisto r on r.id_padre = t.id ";
        }
        return null;
    }
}
