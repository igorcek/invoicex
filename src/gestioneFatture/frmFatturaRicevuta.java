/** * Invoicex * Copyright (c) 2005,2006,2007 Marco Ceccarelli, Tnx snc * * Questo software Ã¨ soggetto, e deve essere distribuito con la licenza   * GNU General Public License, Version 2. La licenza accompagna il software * o potete trovarne una copia alla Free Software Foundation http://www.fsf.org . * * This software is subject to, and may be distributed under, the * GNU General Public License, Version 2. The license should have * accompanied the software or you may obtain a copy of the license * from the Free Software Foundation at http://www.fsf.org . *  * -- * Marco Ceccarelli (m.ceccarelli@tnx.it) * Tnx snc (http://www.tnx.it) * */package gestioneFatture;import gestioneFatture.logic.documenti.*;import it.tnx.Db;import java.awt.Component;import java.awt.Cursor;import java.sql.*;import java.text.*;import java.util.Calendar;import java.util.Vector;import javax.swing.*;public class frmFatturaRicevuta    extends javax.swing.JInternalFrame {    public FatturaAcquisto doc = new FatturaAcquisto();    public gestioneFatture.frmElenFattAcquisto from;    private Db db = Db.INSTANCE;    public String dbStato = "L";    public static String DB_INSERIMENTO = "I";    public static String DB_MODIFICA = "M";    public static String DB_LETTURA = "L";    private String sql = "";    java.util.Timer tim;    /** Creates new form frmElenPrev */    public frmFatturaRicevuta(String dbStato, String dbSerie, int dbNumero, int dbAnno) {        this.setCursor(new Cursor(Cursor.WAIT_CURSOR));        initComponents();        //init campi particolari        this.texData.setDbDefault(texData.DEFAULT_CURRENT);        doc.serie = dbSerie;        doc.numero = dbNumero;        doc.anno = dbAnno;        this.setClosable(true);        //associo il panel ai dati        this.dati.dbNomeTabella = "test_fatt_acquisto";        Vector chiave = new Vector();        chiave.add("serie");        chiave.add("numero");        chiave.add("anno");        this.dati.dbChiave = chiave;        //controllo se inserimento o modifica        this.dbStato = dbStato;        if (dbStato.equalsIgnoreCase(this.DB_INSERIMENTO)) {            this.dati.dbOpen(db.getConn(), "select * from test_fatt_acquisto");        } else {            sql = "select * from test_fatt_acquisto";            sql += " where serie = " + db.pc(dbSerie, "VARCHAR");            sql += " and numero = " + dbNumero;            sql += " and anno = " + dbAnno;            this.dati.dbOpen(db.getConn(), sql);        }        this.dati.dbRefresh();        //apro la combo clienti        this.comClie.setDbTextAbbinato(this.texClie);        this.texClie.setDbComboAbbinata(this.comClie);        this.comClie.dbOpenList(db.getConn(), "select ragione_sociale,codice from clie_forn order by ragione_sociale", this.texClie.getText());        //controllo come devo aprire        if (dbStato.equalsIgnoreCase(this.DB_INSERIMENTO)) {            inserimento();        } else {            dopoInserimento();        }        comCodiceIva1.addItem("");        comCodiceIva2.addItem("");        comCodiceIva3.addItem("");        ResultSet resu = Db.openResultSet("select codice from codici_iva order by codice");        try {            while (resu.next()) {                comCodiceIva1.addItem(resu.getString(1));                comCodiceIva2.addItem(resu.getString(1));                comCodiceIva3.addItem(resu.getString(1));            }        } catch (Exception err) {            err.printStackTrace();        }        this.setCursor(new Cursor(Cursor.DEFAULT_CURSOR));    }    private void inserimento() {        this.dati.dbNew();        texId.setText("");        if (main.iniSerie == false) {            assegnaNumero();            dopoInserimento();        } else {            //disabilitare tutto prima            Component[] cs = this.dati.getComponents();            for (int i = 0; i < cs.length; i++) {                cs[i].setEnabled(false);                if (cs[i] instanceof tnxbeans.tnxComboField) {                    tnxbeans.tnxComboField combo = (tnxbeans.tnxComboField)cs[i];                    combo.setEditable(false);                    combo.setLocked(true);                }            }            this.texSeri.setToolTipText("Inserisci la serie e premi Invio per confermarla ed assegnare un numero al documento");            this.texSeri.setEnabled(true);            this.texSeri.setEditable(true);            this.texSeri.setBackground(java.awt.Color.RED);            javax.swing.SwingUtilities.invokeLater(new Runnable() {                public void run() {                    texSeri.requestFocus();                }            });        }    }    private void assegnaSerie() {        this.texSeri.setText(texSeri.getText().toUpperCase());        assegnaNumero();        //riabilito        Component[] cs = this.dati.getComponents();        for (int i = 0; i < cs.length; i++) {            cs[i].setEnabled(true);            if (cs[i] instanceof tnxbeans.tnxComboField) {                tnxbeans.tnxComboField combo = (tnxbeans.tnxComboField)cs[i];                combo.setEditable(true);                combo.setLocked(false);            }        }        dopoInserimento();        comClie.requestFocus();    }    private void assegnaNumero() {        SimpleDateFormat f = new SimpleDateFormat("dd/MM/yy");        if (texData.getText().trim().length() == 0) {            texData.setText(f.format(new java.util.Date()));        }        //metto ultimo numero preventivo + 1        //apre il resultset per ultimo +1        java.sql.Statement stat;        ResultSet resu;        try {            stat = db.getConn().createStatement();            String sql = "select numero from test_fatt_acquisto";            SimpleDateFormat fanno = new SimpleDateFormat("yyyy");            sql += " where anno = " + fanno.format(f.parse(texData.getText()));            sql += " and serie = " + Db.pc(texSeri.getText(), Types.VARCHAR);            sql += " order by numero desc limit 1";            resu = stat.executeQuery(sql);            if (resu.next() == true) {                this.texNumePrev.setText(String.valueOf(resu.getInt(1) + 1));            } else {                this.texNumePrev.setText("1");            }            this.texAnno.setText(String.valueOf(java.util.Calendar.getInstance().get(Calendar.YEAR)));            //-----------------------------------------------------------------            //se apre in inserimento gli faccio subito salvare la testa            //se poi la annulla vado ad eliminare            //appoggio totali            /*            if (this.dati.dbSave() == true) {                                                                  //richiamo il refresh della maschera che lo ha lanciato                                                                  if (from != null) {                                                                      gestioneFatture.frmElenFattAcquisto temp = (gestioneFatture.frmElenFattAcquisto)from;                                                                      temp.dbRefresh();                                                                  }                                                              }             */            doc.serie = this.texSeri.getText();            doc.numero = new Integer(this.texNumePrev.getText()).intValue();            doc.anno = java.util.Calendar.getInstance().get(Calendar.YEAR);            //this.dati.dbCambiaStato(this.dati.DB_LETTURA);            this.texSeri.setEditable(false);            this.texSeri.setBackground(this.texNumePrev.getBackground());            stat = db.getConn().createStatement();            sql = "select max(id) from test_fatt_acquisto";            resu = stat.executeQuery(sql);            if (resu.next() == true) {                texId.setText(String.valueOf(resu.getInt(1) + 1));            }        } catch (Exception err) {            err.printStackTrace();        }    }    private void dopoInserimento() {        dbAssociaGrigliaRighe();        //provo a fare timer per aggiornare prezzo totale        tim = new java.util.Timer();        timerRefreshFatturaAcquisto timTest = new timerRefreshFatturaAcquisto(this, doc);        tim.schedule(timTest, 1000, 500);        doc.calcolaTotale();    }    public void refreshIva() {        doc.getDettaglioIva().removeAllElements();        getIva(this.comCodiceIva1, this.texImponibileIva1, this.texImportoIva1);        getIva(this.comCodiceIva2, this.texImponibileIva2, this.texImportoIva2);        getIva(this.comCodiceIva3, this.texImponibileIva3, this.texImportoIva3);    }    private void getIva(JComboBox iva, JTextField imponibile, JTextField importo) {        int codiceIva;        double valoreImponibile;        if (iva.getSelectedItem() != null) {            if (iva.getSelectedItem().toString().trim().length() > 0) {                try {                    codiceIva = Integer.parseInt(iva.getSelectedItem().toString());                    valoreImponibile = Db.getDouble(imponibile.getText());                    FatturaAcquisto_iva dett = new FatturaAcquisto_iva(codiceIva, valoreImponibile);                    importo.setText(Db.formatValuta(dett.getIva()));                    doc.getDettaglioIva().add(dett);                } catch (Exception err) {                    err.printStackTrace();                }            }        }    }    private boolean saveDocumento() {        //sposto i totali di modo che li salvi        this.texTota1.setText(this.texTota.getText());        this.texTotaImpo1.setText(this.texTotaImpo.getText());        this.texTotaIva1.setText(this.texTotaIva.getText());        //aggiorno totali        refreshIva();        doc.calcolaTotale();        //salvo altrimenti genera le scadenze sull'importo vuoto        if (this.dati.dbSave()) {            //salvo lengthrighe di dettaglio            Db.executeSql("delete from fatture_ricevute_iva where id_fattura = " + this.texId.getText());            Vector righe = doc.getDettaglioIva();            for (int i = 0; i < righe.size(); i++) {                //System.out.println("r" + i + ":" + righe.toString());                FatturaAcquisto_iva dettaglio = (FatturaAcquisto_iva)righe.get(i);                String sql = "insert into fatture_ricevute_iva (id_fattura, codice_iva, percentuale_iva, imponibile, iva, importo)";                sql += " values (";                sql += " " + Db.pc(texId.getText(), Types.INTEGER);                sql += ", " + Db.pc(dettaglio.getCodiceIva(), Types.INTEGER);                sql += ", " + Db.pc(dettaglio.getPercentualeIva(), Types.DOUBLE);                sql += ", " + Db.pc(dettaglio.getImponibile(), Types.DOUBLE);                sql += ", " + Db.pc(dettaglio.getIva(), Types.DOUBLE);                sql += ", " + Db.pc(dettaglio.getImporto(), Types.DOUBLE);                sql += ")";                Db.executeSql(sql);            }            return true;        }        return false;    }    /** This method is called from within the constructor to     *     *     * initialize the form.     *     *     * WARNING: Do NOT modify this code. The content of this method is     *     *     * always regenerated by the Form Editor.     *     *     */    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents    private void initComponents() {        popGrig = new javax.swing.JPopupMenu();        popGrigModi = new javax.swing.JMenuItem();        popGrigElim = new javax.swing.JMenuItem();        popFoglio = new javax.swing.JPopupMenu();        popFoglioElimina = new javax.swing.JMenuItem();        tabDocumento = new javax.swing.JTabbedPane();        panDati = new javax.swing.JPanel();        dati = new tnxbeans.tnxDbPanel();        texNumePrev = new tnxbeans.tnxTextField();        texClie = new tnxbeans.tnxTextField();        comClie = new tnxbeans.tnxComboField();        texTota1 = new tnxbeans.tnxTextField();        texTota1.setVisible(false);        texNote = new tnxbeans.tnxMemoField();        jLabel13 = new javax.swing.JLabel();        jLabel14 = new javax.swing.JLabel();        jLabel16 = new javax.swing.JLabel();        texData = new tnxbeans.tnxTextField();        jLabel11 = new javax.swing.JLabel();        jLabel151 = new javax.swing.JLabel();        texSeri = new tnxbeans.tnxTextField();        texAnno = new tnxbeans.tnxTextField();        texAnno.setVisible(false);        butAddClie = new javax.swing.JButton();        jLabel15 = new javax.swing.JLabel();        texSeri1 = new tnxbeans.tnxTextField();        texNumePrev2 = new tnxbeans.tnxTextField();        texData1 = new tnxbeans.tnxTextField();        jLabel17 = new javax.swing.JLabel();        jLabel18 = new javax.swing.JLabel();        jLabel19 = new javax.swing.JLabel();        comCodiceIva2 = new javax.swing.JComboBox();        jLabel20 = new javax.swing.JLabel();        jLabel23 = new javax.swing.JLabel();        jLabel24 = new javax.swing.JLabel();        texImponibileIva1 = new javax.swing.JTextField();        texImportoIva1 = new javax.swing.JTextField();        comCodiceIva1 = new javax.swing.JComboBox();        texImponibileIva2 = new javax.swing.JTextField();        texImportoIva2 = new javax.swing.JTextField();        comCodiceIva3 = new javax.swing.JComboBox();        texImponibileIva3 = new javax.swing.JTextField();        texImportoIva3 = new javax.swing.JTextField();        texTotaImpo1 = new tnxbeans.tnxTextField();        texTotaImpo1.setVisible(false);        texTotaIva1 = new tnxbeans.tnxTextField();        texTotaIva1.setVisible(false);        texId = new tnxbeans.tnxTextField();        texId.setVisible(false);        jPanel5 = new javax.swing.JPanel();        jPanel3 = new javax.swing.JPanel();        jLabel3 = new javax.swing.JLabel();        butUndo = new javax.swing.JButton();        butSave = new javax.swing.JButton();        jPanel4 = new javax.swing.JPanel();        texTotaImpo = new tnxbeans.tnxTextField();        texTotaIva = new tnxbeans.tnxTextField();        texTota = new tnxbeans.tnxTextField();        jLabel2 = new javax.swing.JLabel();        jLabel21 = new javax.swing.JLabel();        jLabel22 = new javax.swing.JLabel();        popGrigModi.setText("modifica riga");        popGrigModi.addActionListener(new java.awt.event.ActionListener() {            public void actionPerformed(java.awt.event.ActionEvent evt) {                popGrigModiActionPerformed(evt);            }        });        popGrig.add(popGrigModi);        popGrigElim.setText("elimina");        popGrigElim.addActionListener(new java.awt.event.ActionListener() {            public void actionPerformed(java.awt.event.ActionEvent evt) {                popGrigElimActionPerformed(evt);            }        });        popGrig.add(popGrigElim);        popFoglioElimina.setText("elimina");        popFoglioElimina.addActionListener(new java.awt.event.ActionListener() {            public void actionPerformed(java.awt.event.ActionEvent evt) {                popFoglioEliminaActionPerformed(evt);            }        });        popFoglio.add(popFoglioElimina);        setClosable(true);        setIconifiable(true);        setResizable(true);        setTitle("Fattura");        setMaximizable(true);        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {            }            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {                formInternalFrameClosed(evt);            }            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {                formInternalFrameClosing(evt);            }            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {            }            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {            }            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {            }            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {                formInternalFrameOpened(evt);            }        });        tabDocumento.addChangeListener(new javax.swing.event.ChangeListener() {            public void stateChanged(javax.swing.event.ChangeEvent evt) {                tabDocumentoStateChanged(evt);            }        });        panDati.setLayout(new java.awt.BorderLayout());        dati.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());        dati.setMinimumSize(new java.awt.Dimension(0, 50));        dati.setPreferredSize(new java.awt.Dimension(50, 100));        texNumePrev.setEditable(false);        texNumePrev.setText("numero");        texNumePrev.setDbDescCampo("");        texNumePrev.setDbNomeCampo("numero");        texNumePrev.setDbTipoCampo("testo");        dati.add(texNumePrev, new org.netbeans.lib.awtextra.AbsoluteConstraints(45, 20, 45, -1));        texClie.setText("fornitore");        texClie.setDbComboAbbinata(comClie);        texClie.setDbTipoCampo("");        texClie.setDbDescCampo("Fornitore");        texClie.setDbNomeCampo("fornitore");        texClie.addActionListener(new java.awt.event.ActionListener() {            public void actionPerformed(java.awt.event.ActionEvent evt) {                texClieActionPerformed(evt);            }        });        texClie.addFocusListener(new java.awt.event.FocusAdapter() {            public void focusLost(java.awt.event.FocusEvent evt) {                texClieFocusLost(evt);            }        });        texClie.addKeyListener(new java.awt.event.KeyAdapter() {            public void keyPressed(java.awt.event.KeyEvent evt) {                texClieKeyPressed(evt);            }        });        dati.add(texClie, new org.netbeans.lib.awtextra.AbsoluteConstraints(175, 20, 45, 20));        comClie.setDbTextAbbinato(texClie);        comClie.setDbTipoCampo("");        comClie.setDbNomeCampo("");        comClie.setDbSalvare(false);        comClie.setDbRiempire(false);        comClie.setDbTrovaMentreScrive(true);        comClie.addItemListener(new java.awt.event.ItemListener() {            public void itemStateChanged(java.awt.event.ItemEvent evt) {                comClieItemStateChanged(evt);            }        });        comClie.addActionListener(new java.awt.event.ActionListener() {            public void actionPerformed(java.awt.event.ActionEvent evt) {                comClieActionPerformed(evt);            }        });        comClie.addFocusListener(new java.awt.event.FocusAdapter() {            public void focusLost(java.awt.event.FocusEvent evt) {                comClieFocusLost(evt);            }        });        comClie.addKeyListener(new java.awt.event.KeyAdapter() {            public void keyPressed(java.awt.event.KeyEvent evt) {                comClieKeyPressed(evt);            }        });        dati.add(comClie, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 20, 180, 20));        texTota1.setText("0");        texTota1.setBackground(new java.awt.Color(255, 200, 200));        texTota1.setDbTipoCampo("valuta");        texTota1.setDbDescCampo("");        texTota1.setDbNomeCampo("importo");        dati.add(texTota1, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 160, 60, -1));        texNote.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);        texNote.setText("note");        texNote.setDbNomeCampo("descrizione");        dati.add(texNote, new org.netbeans.lib.awtextra.AbsoluteConstraints(175, 95, 320, 35));        jLabel13.setText("numero");        dati.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(45, 5, 45, 15));        jLabel14.setText("serie");        dati.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(5, 5, 35, 15));        jLabel16.setText("data");        dati.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(95, 5, 75, 15));        texData.setText("data");        texData.setDbDescCampo("Data");        texData.setDbNomeCampo("data");        texData.setDbTipoCampo("data");        texData.setmaxChars(10);        texData.addActionListener(new java.awt.event.ActionListener() {            public void actionPerformed(java.awt.event.ActionEvent evt) {                texDataActionPerformed(evt);            }        });        texData.addFocusListener(new java.awt.event.FocusAdapter() {            public void focusLost(java.awt.event.FocusEvent evt) {                texDataFocusLost(evt);            }        });        dati.add(texData, new org.netbeans.lib.awtextra.AbsoluteConstraints(95, 20, 75, -1));        jLabel11.setFont(new java.awt.Font("Dialog", 0, 11));        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);        jLabel11.setText("Note");        dati.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(175, 75, 65, -1));        jLabel151.setText("fornitore");        dati.add(jLabel151, new org.netbeans.lib.awtextra.AbsoluteConstraints(175, 5, 75, 15));        texSeri.setEditable(false);        texSeri.setText("serie");        texSeri.setDbDescCampo("");        texSeri.setDbNomeCampo("serie");        texSeri.setDbTipoCampo("");        texSeri.addKeyListener(new java.awt.event.KeyAdapter() {            public void keyPressed(java.awt.event.KeyEvent evt) {                texSeriKeyPressed(evt);            }        });        dati.add(texSeri, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, 30, -1));        texAnno.setBackground(new java.awt.Color(255, 200, 200));        texAnno.setText("anno");        texAnno.setDbDescCampo("");        texAnno.setDbNomeCampo("anno");        texAnno.setDbTipoCampo("");        dati.add(texAnno, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 140, 60, -1));        butAddClie.setFont(new java.awt.Font("Dialog", 0, 10));        butAddClie.setText("*");        butAddClie.addActionListener(new java.awt.event.ActionListener() {            public void actionPerformed(java.awt.event.ActionEvent evt) {                butAddClieActionPerformed(evt);            }        });        dati.add(butAddClie, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 20, 40, 20));        jLabel15.setText("Dati del documento esterno");        dati.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 55, 310, 15));        texSeri1.setText("serie");        texSeri1.setDbTipoCampo("");        texSeri1.setDbDescCampo("Serie Documento");        texSeri1.setDbNomeCampo("serie_doc");        dati.add(texSeri1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 95, 30, -1));        texNumePrev2.setText("numero");        texNumePrev2.setDbTipoCampo("testo");        texNumePrev2.setDbDescCampo("Numero Documento");        texNumePrev2.setDbNomeCampo("numero_doc");        dati.add(texNumePrev2, new org.netbeans.lib.awtextra.AbsoluteConstraints(45, 95, 45, -1));        texData1.setText("data");        texData1.setDbDescCampo("Data Documento");        texData1.setDbNomeCampo("data_doc");        texData1.setDbTipoCampo("data");        texData1.setmaxChars(10);        dati.add(texData1, new org.netbeans.lib.awtextra.AbsoluteConstraints(95, 95, 75, -1));        jLabel17.setText("serie");        dati.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 75, 35, 15));        jLabel18.setText("numero");        dati.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(45, 75, 45, 15));        jLabel19.setText("data");        dati.add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 75, 75, 15));        comCodiceIva2.setEditable(true);        dati.add(comCodiceIva2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 200, 70, 20));        jLabel20.setText("Codice Iva");        dati.add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 155, 75, 15));        jLabel23.setText("Imponibile");        dati.add(jLabel23, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 155, 80, 15));        jLabel24.setText("Importo Iva");        dati.add(jLabel24, new org.netbeans.lib.awtextra.AbsoluteConstraints(175, 155, 80, 15));        dati.add(texImponibileIva1, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 175, 75, -1));        dati.add(texImportoIva1, new org.netbeans.lib.awtextra.AbsoluteConstraints(175, 175, 75, -1));        comCodiceIva1.setEditable(true);        dati.add(comCodiceIva1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 175, 70, 20));        dati.add(texImponibileIva2, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 200, 75, -1));        dati.add(texImportoIva2, new org.netbeans.lib.awtextra.AbsoluteConstraints(175, 200, 75, -1));        comCodiceIva3.setEditable(true);        dati.add(comCodiceIva3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 225, 70, 20));        dati.add(texImponibileIva3, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 225, 75, -1));        dati.add(texImportoIva3, new org.netbeans.lib.awtextra.AbsoluteConstraints(175, 225, 75, -1));        texTotaImpo1.setText("0");        texTotaImpo1.setBackground(new java.awt.Color(255, 200, 200));        texTotaImpo1.setDbTipoCampo("valuta");        texTotaImpo1.setDbDescCampo("");        texTotaImpo1.setDbNomeCampo("imponibile");        dati.add(texTotaImpo1, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 180, 60, -1));        texTotaIva1.setText("0");        texTotaIva1.setBackground(new java.awt.Color(255, 200, 200));        texTotaIva1.setDbTipoCampo("valuta");        texTotaIva1.setDbDescCampo("");        texTotaIva1.setDbNomeCampo("iva");        dati.add(texTotaIva1, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 200, 60, -1));        texId.setBackground(new java.awt.Color(255, 200, 200));        texId.setText("0");        texId.setDbDescCampo("");        texId.setDbNomeCampo("id");        texId.setDbTipoCampo("");        dati.add(texId, new org.netbeans.lib.awtextra.AbsoluteConstraints(285, 225, 45, -1));        panDati.add(dati, java.awt.BorderLayout.CENTER);        tabDocumento.addTab("Dati Fattura", panDati);        getContentPane().add(tabDocumento, java.awt.BorderLayout.CENTER);        jPanel5.setLayout(new java.awt.GridLayout(1, 0));        jPanel3.setPreferredSize(new java.awt.Dimension(157, 80));        jLabel3.setForeground(new java.awt.Color(204, 204, 204));        jPanel3.add(jLabel3);        butUndo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/icons/tango-icon-theme-080/16x16/actions/edit-undo.png")));        butUndo.setText("Annulla");        butUndo.addActionListener(new java.awt.event.ActionListener() {            public void actionPerformed(java.awt.event.ActionEvent evt) {                butUndoActionPerformed(evt);            }        });        jPanel3.add(butUndo);        butSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/icons/tango-icon-theme-080/16x16/devices/media-floppy.png")));        butSave.setText("Salva");        butSave.addActionListener(new java.awt.event.ActionListener() {            public void actionPerformed(java.awt.event.ActionEvent evt) {                butSaveActionPerformed(evt);            }        });        jPanel3.add(butSave);        jPanel5.add(jPanel3);        jPanel4.setLayout(null);        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(" totale "));        texTotaImpo.setHorizontalAlignment(javax.swing.JTextField.RIGHT);        texTotaImpo.setText("0");        texTotaImpo.setDbTipoCampo("valuta");        jPanel4.add(texTotaImpo);        texTotaImpo.setBounds(160, 15, 75, 20);        texTotaIva.setHorizontalAlignment(javax.swing.JTextField.RIGHT);        texTotaIva.setText("0");        texTotaIva.setDbTipoCampo("valuta");        jPanel4.add(texTotaIva);        texTotaIva.setBounds(160, 35, 75, 20);        texTota.setHorizontalAlignment(javax.swing.JTextField.RIGHT);        texTota.setText("0");        texTota.setDbTipoCampo("valuta");        texTota.setFont(new java.awt.Font("Dialog", 1, 12));        jPanel4.add(texTota);        texTota.setBounds(160, 55, 75, 20);        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);        jLabel2.setText("Totale");        jPanel4.add(jLabel2);        jLabel2.setBounds(25, 55, 130, 20);        jLabel21.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);        jLabel21.setText("totale Iva");        jPanel4.add(jLabel21);        jLabel21.setBounds(25, 36, 130, 20);        jLabel22.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);        jLabel22.setText("totale Imponibile");        jPanel4.add(jLabel22);        jLabel22.setBounds(30, 15, 125, 20);        jPanel5.add(jPanel4);        getContentPane().add(jPanel5, java.awt.BorderLayout.SOUTH);        pack();    }// </editor-fold>//GEN-END:initComponents    private void tabDocumentoStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_tabDocumentoStateChanged    }//GEN-LAST:event_tabDocumentoStateChanged    private void popFoglioEliminaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_popFoglioEliminaActionPerformed    }//GEN-LAST:event_popFoglioEliminaActionPerformed    private void texSeriKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_texSeriKeyPressed        if (evt.getKeyCode() == evt.VK_TAB || evt.getKeyCode() == evt.VK_ENTER) {            assegnaSerie();        }    }//GEN-LAST:event_texSeriKeyPressed    private void texClieActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_texClieActionPerformed    }//GEN-LAST:event_texClieActionPerformed    private void comClieActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comClieActionPerformed    }//GEN-LAST:event_comClieActionPerformed    private void texDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_texDataActionPerformed    }//GEN-LAST:event_texDataActionPerformed    private void butAddClieActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butAddClieActionPerformed        frmClie frameAggiungiCliente = new frmClie();                if (main.getPersonal().equals(main.PERSONAL_CUCINAIN)) {            main.getPadre().openFrame(frameAggiungiCliente, 450, 350);        } else {            main.getPadre().openFrame(frameAggiungiCliente, 750, 620);        }        frameAggiungiCliente.addNew(this.comClie);    }//GEN-LAST:event_butAddClieActionPerformed    private void formInternalFrameClosing(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameClosing    }//GEN-LAST:event_formInternalFrameClosing    private void texBancCCFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_texBancCCFocusLost    }//GEN-LAST:event_texBancCCFocusLost    private void comClieItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comClieItemStateChanged    }//GEN-LAST:event_comClieItemStateChanged    private void butUndo1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butUndo1ActionPerformed    }//GEN-LAST:event_butUndo1ActionPerformed    private void texDataFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_texDataFocusLost        doc.dbRicalcolaProgressivo(dbStato, this.texData.getText(), this.texNumePrev, this.texAnno);    }//GEN-LAST:event_texDataFocusLost    private void comClieKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_comClieKeyPressed        //ricerca con F4        if (evt.getKeyCode() == evt.VK_F4) {            java.util.Hashtable colsWidthPerc = new java.util.Hashtable();            colsWidthPerc.put("id", new Double(20));            colsWidthPerc.put("ragione", new Double(40));            colsWidthPerc.put("indi", new Double(40));            String sql =                 "select clie_forn.codice as id, clie_forn.ragione_sociale as ragione, clie_forn.indirizzo as indi from clie_forn " + "where clie_forn.ragione_sociale like '%" + Db.aa(this.comClie.getText()) + "%'" + " order by clie_forn.ragione_sociale";            ResultSet resTemp = db.openResultSet(sql);            try {                if (resTemp.next() == true) {                    frmDbListSmall temp = new frmDbListSmall(main.getPadre(), true, sql, this.texClie, 0, colsWidthPerc, 50, 50, 400, 300);                    this.comClie.dbTrovaKey(texClie.getText());                } else {                    javax.swing.JOptionPane.showMessageDialog(this, "Nessun cliente trovato");                }            } catch (Exception err) {                err.printStackTrace();                javax.swing.JOptionPane.showMessageDialog(this, "Errore nella ricerca cliente: " + err.toString());            }        }    }//GEN-LAST:event_comClieKeyPressed    private void texClieKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_texClieKeyPressed    }//GEN-LAST:event_texClieKeyPressed    private void comClieFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_comClieFocusLost    }//GEN-LAST:event_comClieFocusLost    private void texClieFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_texClieFocusLost    }//GEN-LAST:event_texClieFocusLost    private void texScon2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_texScon2KeyPressed    }//GEN-LAST:event_texScon2KeyPressed    private void texScon1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_texScon1KeyTyped    }//GEN-LAST:event_texScon1KeyTyped    private void texScon2FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_texScon2FocusLost    }//GEN-LAST:event_texScon2FocusLost    private void formInternalFrameOpened(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameOpened    }//GEN-LAST:event_formInternalFrameOpened    private void formInternalFrameClosed(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameClosed        tim.cancel();        main.getPadre().closeFrame(this);    }//GEN-LAST:event_formInternalFrameClosed    private void popGrigElimActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_popGrigElimActionPerformed    }//GEN-LAST:event_popGrigElimActionPerformed    private void popGrigModiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_popGrigModiActionPerformed    }//GEN-LAST:event_popGrigModiActionPerformed    private void butUndoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butUndoActionPerformed        // Add your handling code here:        if (dbStato == this.DB_INSERIMENTO) {            //elimino la testata inserita e poi annullata            String sql = "delete from test_fatt_acquisto";            sql += " where serie = " + Db.pc(String.valueOf(doc.serie), "VARCHAR");            sql += " and numero = " + Db.pc(String.valueOf(doc.numero), "NUMBER");            sql += " and anno = " + Db.pc(String.valueOf(doc.anno), "INTEGER");            Db.executeSql(sql);            //todo eliminare lengthrighe        }        this.dispose();    }//GEN-LAST:event_butUndoActionPerformed    private void butSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butSaveActionPerformed        if (controlloCampi() == true) {            if (saveDocumento()) {                try {                    from.dbRefresh();                } catch (Exception err) {                    err.printStackTrace();                }                this.dispose();            }        }    }//GEN-LAST:event_butSaveActionPerformed    // Variables declaration - do not modify//GEN-BEGIN:variables    private javax.swing.JButton butAddClie;    private javax.swing.JButton butSave;    private javax.swing.JButton butUndo;    private tnxbeans.tnxComboField comClie;    private javax.swing.JComboBox comCodiceIva1;    private javax.swing.JComboBox comCodiceIva2;    private javax.swing.JComboBox comCodiceIva3;    private tnxbeans.tnxDbPanel dati;    private javax.swing.JLabel jLabel11;    private javax.swing.JLabel jLabel13;    private javax.swing.JLabel jLabel14;    private javax.swing.JLabel jLabel15;    private javax.swing.JLabel jLabel151;    private javax.swing.JLabel jLabel16;    private javax.swing.JLabel jLabel17;    private javax.swing.JLabel jLabel18;    private javax.swing.JLabel jLabel19;    private javax.swing.JLabel jLabel2;    private javax.swing.JLabel jLabel20;    private javax.swing.JLabel jLabel21;    private javax.swing.JLabel jLabel22;    private javax.swing.JLabel jLabel23;    private javax.swing.JLabel jLabel24;    private javax.swing.JLabel jLabel3;    private javax.swing.JPanel jPanel3;    private javax.swing.JPanel jPanel4;    private javax.swing.JPanel jPanel5;    private javax.swing.JPanel panDati;    private javax.swing.JPopupMenu popFoglio;    private javax.swing.JMenuItem popFoglioElimina;    private javax.swing.JPopupMenu popGrig;    private javax.swing.JMenuItem popGrigElim;    private javax.swing.JMenuItem popGrigModi;    private javax.swing.JTabbedPane tabDocumento;    private tnxbeans.tnxTextField texAnno;    public tnxbeans.tnxTextField texClie;    private tnxbeans.tnxTextField texData;    private tnxbeans.tnxTextField texData1;    private tnxbeans.tnxTextField texId;    private javax.swing.JTextField texImponibileIva1;    private javax.swing.JTextField texImponibileIva2;    private javax.swing.JTextField texImponibileIva3;    private javax.swing.JTextField texImportoIva1;    private javax.swing.JTextField texImportoIva2;    private javax.swing.JTextField texImportoIva3;    private tnxbeans.tnxMemoField texNote;    private tnxbeans.tnxTextField texNumePrev;    private tnxbeans.tnxTextField texNumePrev2;    private tnxbeans.tnxTextField texSeri;    private tnxbeans.tnxTextField texSeri1;    public tnxbeans.tnxTextField texTota;    private tnxbeans.tnxTextField texTota1;    public tnxbeans.tnxTextField texTotaImpo;    private tnxbeans.tnxTextField texTotaImpo1;    public tnxbeans.tnxTextField texTotaIva;    private tnxbeans.tnxTextField texTotaIva1;    // End of variables declaration//GEN-END:variables    void dbAssociaGrigliaRighe() {        comCodiceIva1.setSelectedIndex(-1);        texImponibileIva1.setText("");        texImportoIva1.setText("");        comCodiceIva2.setSelectedIndex(-1);        texImponibileIva2.setText("");        texImportoIva2.setText("");        comCodiceIva3.setSelectedIndex(-1);        texImponibileIva3.setText("");        texImportoIva3.setText("");        //todo caricare l'iva        String sql = "select * from fatture_ricevute_iva";        sql += " where id_fattura = " + Db.pc(this.texId.getText(), Types.INTEGER);        sql += " order by id";        ResultSet resu = Db.openResultSet(sql);        try {            if (resu.next()) {                this.comCodiceIva1.setSelectedItem(resu.getString("codice_iva"));                this.texImponibileIva1.setText(Db.formatValuta(resu.getDouble("imponibile")));                this.texImportoIva1.setText(Db.formatValuta(resu.getDouble("iva")));            }            if (resu.next()) {                this.comCodiceIva2.setSelectedItem(resu.getString("codice_iva"));                this.texImponibileIva2.setText(Db.formatValuta(resu.getDouble("imponibile")));                this.texImportoIva2.setText(Db.formatValuta(resu.getDouble("iva")));            }            if (resu.next()) {                this.comCodiceIva3.setSelectedItem(resu.getString("codice_iva"));                this.texImponibileIva3.setText(Db.formatValuta(resu.getDouble("imponibile")));                this.texImportoIva3.setText(Db.formatValuta(resu.getDouble("iva")));            }        } catch (Exception err) {            err.printStackTrace();        }    }    private boolean controlloCampi() {        //controllo cliente        //li recupero dal cliente        ResultSet tempClie;        String sql = "select * from clie_forn";        sql += " where codice = " + Db.pc(this.texClie.getText(), "NUMERIC");        tempClie = Db.openResultSet(sql);        try {            if (tempClie.next() != true) {                javax.swing.JOptionPane.showMessageDialog(this, "Il codice fornitore specificato non esiste in anagrafica !");                return false;            }        } catch (Exception err) {            err.printStackTrace();        }        return true;    }    public String getSerie() {        return this.texSeri.getText();    }    public String getNumero() {        return this.texNumePrev.getText();    }    public String getAnno() {        return this.texAnno.getText();    }}class timerRefreshFatturaAcquisto    extends java.util.TimerTask {    frmFatturaRicevuta parent;    gestioneFatture.logic.documenti.FatturaAcquisto doc;    public timerRefreshFatturaAcquisto(frmFatturaRicevuta parent, gestioneFatture.logic.documenti.FatturaAcquisto doc) {        this.parent = parent;        this.doc = doc;    }    ;public void run() {        //debug        System.out.println("runTimer");        try {            parent.refreshIva();            parent.doc.calcolaTotale();            parent.texTota.setText(it.tnx.Util.formatValutaEuro(doc.totale));            parent.texTotaImpo.setText(it.tnx.Util.formatValutaEuro(doc.totale_imponibile));            parent.texTotaIva.setText(it.tnx.Util.formatValutaEuro(doc.totale_iva));        } catch (Exception err) {            err.printStackTrace();        }    }}