/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * JDialogStampaArticoli.java
 *
 * Created on 21-nov-2008,com 9.06.21
 */
package it.tnx.invoicex.gui;

import it.tnx.Db;
import gestioneFatture.*;
import it.tnx.commons.DbUtils;
import it.tnx.commons.KeyValuePair;
import it.tnx.commons.SwingUtils;
import it.tnx.dbeans.JTableDb;
import it.tnx.dbeans.pdfPrint.PrintSimpleTable;
import java.io.File;
import java.sql.ResultSet;
import java.sql.Types;
import java.text.SimpleDateFormat;
import java.util.Vector;

/**
 *
 * @author mceccarelli
 */
public class JDialogTotaliFatture extends javax.swing.JDialog {

    private JTableDb griglia;

    /** Creates new form JDialogStampaArticoli */
    public JDialogTotaliFatture(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();

        dal.setFormats(new SimpleDateFormat("dd/MM/yyyy"));
        al.setFormats(new SimpleDateFormat("dd/MM/yyyy"));

        comAgente.dbAddElement("<tutti gli agenti>", "*");
        comAgente.dbOpenList(Db.getConn(), "SELECT nome, id FROM agenti ORDER BY nome");

        Vector v = new Vector();
        v.add(new KeyValuePair("pdf", "PDF"));
        v.add(new KeyValuePair("html", "HTML"));
        v.add(new KeyValuePair("xls", "EXCEL"));
        v.add(new KeyValuePair("csv", "CSV"));
        SwingUtils.initJComboFromKVList(formato, v);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        stampa = new javax.swing.JButton();
        annulla = new javax.swing.JButton();
        tipo = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        formato = new javax.swing.JComboBox();
        dal = new org.jdesktop.swingx.JXDatePicker();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        al = new org.jdesktop.swingx.JXDatePicker();
        jLabel7 = new javax.swing.JLabel();
        comAgente = new tnxbeans.tnxComboField();

        FormListener formListener = new FormListener();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Export Acquisti/Vendite");
        setMinimumSize(new java.awt.Dimension(412, 215));

        stampa.setFont(stampa.getFont().deriveFont(stampa.getFont().getStyle() | java.awt.Font.BOLD));
        stampa.setText("Esporta");
        stampa.addActionListener(formListener);

        annulla.setText("Annulla");
        annulla.addActionListener(formListener);

        tipo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Vendita", "Acquisto" }));
        tipo.setSelectedItem("Vendita");
        tipo.addActionListener(formListener);

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel1.setText("Origine");
        jLabel1.setPreferredSize(new java.awt.Dimension(80, 14));

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel5.setText("Formato Stampa");
        jLabel5.setPreferredSize(new java.awt.Dimension(80, 14));

        formato.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        dal.setDate(null);

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("Dal");
        jLabel3.setPreferredSize(new java.awt.Dimension(80, 14));

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText("Al");
        jLabel4.setPreferredSize(new java.awt.Dimension(80, 14));

        al.setDate(null);

        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel7.setText("Agente");
        jLabel7.setPreferredSize(new java.awt.Dimension(80, 14));

        comAgente.setDbDescCampo("");
        comAgente.setDbNomeCampo("");
        comAgente.setDbTipoCampo("");
        comAgente.setDbTrovaMentreScrive(true);
        comAgente.addItemListener(formListener);
        comAgente.addFocusListener(formListener);

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(jLabel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(tipo, 0, 350, Short.MAX_VALUE))
                    .add(layout.createSequentialGroup()
                        .add(jLabel7, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(comAgente, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 350, Short.MAX_VALUE))
                    .add(layout.createSequentialGroup()
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jLabel3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jLabel4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jLabel5, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 115, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                            .add(org.jdesktop.layout.GroupLayout.LEADING, dal, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .add(formato, 0, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .add(al, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 137, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                        .add(annulla)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(stampa)))
                .addContainerGap())
        );

        layout.linkSize(new java.awt.Component[] {jLabel1, jLabel3, jLabel4, jLabel5, jLabel7}, org.jdesktop.layout.GroupLayout.HORIZONTAL);

        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(tipo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(jLabel7, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(comAgente, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(dal, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(al, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(12, 12, 12)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel5, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(formato, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(stampa)
                    .add(annulla))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }

    // Code for dispatching events from components to event handlers.

    private class FormListener implements java.awt.event.ActionListener, java.awt.event.FocusListener, java.awt.event.ItemListener {
        FormListener() {}
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            if (evt.getSource() == stampa) {
                JDialogTotaliFatture.this.stampaActionPerformed(evt);
            }
            else if (evt.getSource() == annulla) {
                JDialogTotaliFatture.this.annullaActionPerformed(evt);
            }
            else if (evt.getSource() == tipo) {
                JDialogTotaliFatture.this.tipoActionPerformed(evt);
            }
        }

        public void focusGained(java.awt.event.FocusEvent evt) {
        }

        public void focusLost(java.awt.event.FocusEvent evt) {
            if (evt.getSource() == comAgente) {
                JDialogTotaliFatture.this.comAgenteFocusLost(evt);
            }
        }

        public void itemStateChanged(java.awt.event.ItemEvent evt) {
            if (evt.getSource() == comAgente) {
                JDialogTotaliFatture.this.comAgenteItemStateChanged(evt);
            }
        }
    }// </editor-fold>//GEN-END:initComponents

    private void stampaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stampaActionPerformed
        //stampa
        this.setCursor(new java.awt.Cursor(java.awt.Cursor.WAIT_CURSOR));

        int[] headerWidth = null;

        String tabella = tipo.getSelectedItem().equals("Acquisto") ? "test_fatt_acquisto" : "test_fatt";

        String sql = "SELECT ";
        if (tabella.equals("test_fatt")) {
            sql += "clie.codice as 'Cod. Cliente', clie.ragione_sociale as 'Cliente', agen.nome as 'Agente', SUM(fatt.totale_imponibile) as 'Totale Imponibile', SUM(fatt.totale_iva) as 'Imposta', SUM(fatt.totale) as 'Totale Fatturato' ";
        } else {
            sql += "clie.codice as 'Cod. Cliente', clie.ragione_sociale as 'Cliente', SUM(fatt.imponibile) as 'Totale Imponibile',  SUM(fatt.iva) as 'Imposta', SUM(fatt.importo) as 'Totale Fatturato' ";
        }
        sql += "FROM " + tabella + " fatt LEFT JOIN clie_forn clie";
        if (tabella.equals("test_fatt")) {
            sql += " ON fatt.cliente = clie.codice ";
            sql += "LEFT JOIN agenti agen ON fatt.agente_codice = agen.id ";
        } else {
            sql += " ON fatt.fornitore = clie.codice ";
        }

        sql += " WHERE 1 = 1 ";

        if (dal.getDate() != null) {
            if (tabella.equals("test_fatt")) {
                sql += " AND data >= " + DbUtils.pc2(dal.getDate(), Types.DATE);
            } else {
                sql += " AND data_doc >= " + DbUtils.pc2(dal.getDate(), Types.DATE);
            }
        }
        if (al.getDate() != null) {
            if (tabella.equals("test_fatt")) {
                sql += " AND data <= " + DbUtils.pc2(al.getDate(), Types.DATE);
            } else {
                sql += " AND data_doc <= " + DbUtils.pc2(al.getDate(), Types.DATE);
            }
        }

        if (comAgente.getSelectedIndex() > 0) {
            if (tabella.equals("test_fatt")) {
                sql += " and agente_codice = '" + comAgente.getSelectedKey() + "'";
            }
        }

        sql += " GROUP BY clie.codice, agen.id ORDER BY clie.ragione_sociale ";

        ResultSet rs = null;
        try {
            System.out.println("sql:\n" + sql);
            rs = DbUtils.tryOpenResultSetEditable(Db.conn, sql);
        } catch (Exception ex) {
            ex.printStackTrace();
            this.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
            SwingUtils.showErrorMessage(this, ex.getMessage());
            return;
        }

        PrintSimpleTable print = new PrintSimpleTable(rs);
        print.totali = true;
        String caption = "";
        try {
            ResultSet r = Db.openResultSet("select ragione_sociale from dati_azienda");
            if (r.next()) {
                caption += r.getString(1);
            }
        } catch (Exception ex) {
            ex.printStackTrace();
        }
        if (caption.length() > 0) {
            caption += " - ";
        }
        caption += tipo.getSelectedItem();

        if (((KeyValuePair) formato.getSelectedItem()).key.toString().equalsIgnoreCase("pdf")) {
            print.print(caption, headerWidth, ((KeyValuePair) formato.getSelectedItem()).key.toString(), "", "", -2);
            Util.start("tempStampa.pdf");
        } else if (((KeyValuePair) formato.getSelectedItem()).key.toString().equalsIgnoreCase("xls")) {
            String nomeFile = print.printExcel(caption, headerWidth, "", "");
            Util.start(nomeFile);
        } else if (((KeyValuePair) formato.getSelectedItem()).key.toString().equalsIgnoreCase("csv")) {
            String nomeFile = print.printCsv(caption, headerWidth, "", "");
            File fdir = new File(new File(nomeFile).getAbsolutePath());
            fdir = fdir.getParentFile();
            System.out.println("fdir:" + fdir);
            Util.start(fdir.getAbsolutePath());
        } else {
            print.print(caption, headerWidth, ((KeyValuePair) formato.getSelectedItem()).key.toString(), "", "");
            Util.start("tempStampa.html");
        }
        try {
            rs.getStatement().close();
            rs.close();
        } catch (Exception e) {
        }

        this.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
    }//GEN-LAST:event_stampaActionPerformed

    private void annullaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_annullaActionPerformed
        dispose();
    }//GEN-LAST:event_annullaActionPerformed

    private void comAgenteItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comAgenteItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_comAgenteItemStateChanged

    private void comAgenteFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_comAgenteFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_comAgenteFocusLost

    private void tipoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tipoActionPerformed
        if(tipo.getSelectedItem().equals("Acquisto")){
            comAgente.setEnabled(false);
        } else {
            comAgente.setEnabled(true);
        }
    }//GEN-LAST:event_tipoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                JDialogTotaliFatture dialog = new JDialogTotaliFatture(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {

                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    public org.jdesktop.swingx.JXDatePicker al;
    public javax.swing.JButton annulla;
    public tnxbeans.tnxComboField comAgente;
    public org.jdesktop.swingx.JXDatePicker dal;
    public javax.swing.JComboBox formato;
    public javax.swing.JLabel jLabel1;
    public javax.swing.JLabel jLabel3;
    public javax.swing.JLabel jLabel4;
    public javax.swing.JLabel jLabel5;
    public javax.swing.JLabel jLabel7;
    public javax.swing.JButton stampa;
    public javax.swing.JComboBox tipo;
    // End of variables declaration//GEN-END:variables

    public JTableDb getGriglia() {
        return griglia;
    }

    public void setGriglia(JTableDb griglia) {
        this.griglia = griglia;
    }
}
